ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.main,"ax",%progbits
  19              		.align	2
  20              		.global	main
  21              		.thumb
  22              		.thumb_func
  23              		.type	main, %function
  24              	main:
  25              	.LFB68:
  26              		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****     FreeRTOS V9.0.0rc2 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:main.c        ****     All rights reserved
   4:main.c        **** 
   5:main.c        ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:main.c        **** 
   7:main.c        ****     This file is part of the FreeRTOS distribution.
   8:main.c        **** 
   9:main.c        ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:main.c        ****     the terms of the GNU General Public License (version 2) as published by the
  11:main.c        ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:main.c        **** 
  13:main.c        ****     ***************************************************************************
  14:main.c        ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:main.c        ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:main.c        ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:main.c        ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:main.c        ****     ***************************************************************************
  19:main.c        **** 
  20:main.c        ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:main.c        ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:main.c        ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:main.c        ****     link: http://www.freertos.org/a00114.html
  24:main.c        **** 
  25:main.c        ****     ***************************************************************************
  26:main.c        ****      *                                                                       *
  27:main.c        ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:main.c        ****      *    robust, strictly quality controlled, supported, and cross          *
  29:main.c        ****      *    platform software that is more than just the market leader, it     *
  30:main.c        ****      *    is the industry's de facto standard.                               *
  31:main.c        ****      *                                                                       *
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 2


  32:main.c        ****      *    Help yourself get started quickly while simultaneously helping     *
  33:main.c        ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:main.c        ****      *    tutorial book, reference manual, or both:                          *
  35:main.c        ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:main.c        ****      *                                                                       *
  37:main.c        ****     ***************************************************************************
  38:main.c        **** 
  39:main.c        ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:main.c        ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:main.c        ****     defined configASSERT()?
  42:main.c        **** 
  43:main.c        ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:main.c        ****     embedded software for free we request you assist our global community by
  45:main.c        ****     participating in the support forum.
  46:main.c        **** 
  47:main.c        ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:main.c        ****     be as productive as possible as early as possible.  Now you can receive
  49:main.c        ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:main.c        ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:main.c        **** 
  52:main.c        ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:main.c        ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:main.c        ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:main.c        **** 
  56:main.c        ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:main.c        ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:main.c        **** 
  59:main.c        ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:main.c        ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:main.c        ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:main.c        **** 
  63:main.c        ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:main.c        ****     engineered and independently SIL3 certified version for use in safety and
  65:main.c        ****     mission critical applications that require provable dependability.
  66:main.c        **** 
  67:main.c        ****     1 tab == 4 spaces!
  68:main.c        **** */
  69:main.c        **** 
  70:main.c        **** #include <device.h>
  71:main.c        **** 
  72:main.c        **** /* RTOS includes. */
  73:main.c        **** #include "FreeRTOS.h"
  74:main.c        **** #include "task.h"
  75:main.c        **** #include "queue.h"
  76:main.c        **** #include "semphr.h"
  77:main.c        **** 
  78:main.c        **** /* Common Demo includes. */
  79:main.c        **** #include "serial.h"
  80:main.c        **** #include "comtest.h"
  81:main.c        **** /*---------------------------------------------------------------------------*/
  82:main.c        **** 
  83:main.c        **** /* The time between cycles of the 'check' functionality (defined within the
  84:main.c        **** tick hook. */
  85:main.c        **** #define mainCHECK_DELAY						( ( TickType_t ) 5000 / portTICK_PERIOD_MS )
  86:main.c        **** #define mainCOM_LED							( 3 )
  87:main.c        **** 
  88:main.c        **** /* The number of nano seconds between each processor clock. */
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 3


  89:main.c        **** #define mainNS_PER_CLOCK ( ( unsigned long ) ( ( 1.0 / ( double ) configCPU_CLOCK_HZ ) * 1000000000
  90:main.c        **** 
  91:main.c        **** /* Task priorities. */
  92:main.c        **** #define mainCOM_TEST_TASK_PRIORITY			( tskIDLE_PRIORITY + 1 )
  93:main.c        **** /*---------------------------------------------------------------------------*/
  94:main.c        **** 
  95:main.c        **** 
  96:main.c        **** /*
  97:main.c        ****  * Installs the RTOS interrupt handlers and starts the peripherals.
  98:main.c        ****  */
  99:main.c        **** static void prvHardwareSetup( void );
 100:main.c        **** /*---------------------------------------------------------------------------*/
 101:main.c        **** 
 102:main.c        **** void main( void )
 103:main.c        **** {
  27              		.loc 1 103 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
 104:main.c        ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
 105:main.c        **** 	prvHardwareSetup();
  37              		.loc 1 105 0
  38 0004 FFF7FEFF 		bl	prvHardwareSetup
 106:main.c        **** 
 107:main.c        **** 	vAltStartComTestTasks( mainCOM_TEST_TASK_PRIORITY, 9600, mainCOM_LED );
  39              		.loc 1 107 0
  40 0008 0120     		movs	r0, #1
  41 000a 4FF41651 		mov	r1, #9600
  42 000e 0322     		movs	r2, #3
  43 0010 FFF7FEFF 		bl	vAltStartComTestTasks
 108:main.c        **** 
 109:main.c        **** 	/* Will only get here if there was insufficient memory to create the idle
 110:main.c        ****     task.  The idle task is created within vTaskStartScheduler(). */
 111:main.c        **** 	vTaskStartScheduler();
  44              		.loc 1 111 0
  45 0014 FFF7FEFF 		bl	vTaskStartScheduler
  46              	.L2:
 112:main.c        **** 
 113:main.c        **** 	/* Should never reach here as the kernel will now be running.  If
 114:main.c        **** 	vTaskStartScheduler() does return then it is very likely that there was
 115:main.c        **** 	insufficient (FreeRTOS) heap space available to create all the tasks,
 116:main.c        **** 	including the idle task that is created within vTaskStartScheduler() itself. */
 117:main.c        **** 	for( ;; );
  47              		.loc 1 117 0 discriminator 1
  48 0018 FEE7     		b	.L2
  49              		.cfi_endproc
  50              	.LFE68:
  51              		.size	main, .-main
  52 001a 00BF     		.section	.text.prvHardwareSetup,"ax",%progbits
  53              		.align	2
  54              		.thumb
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 4


  55              		.thumb_func
  56              		.type	prvHardwareSetup, %function
  57              	prvHardwareSetup:
  58              	.LFB69:
 118:main.c        **** }
 119:main.c        **** /*---------------------------------------------------------------------------*/
 120:main.c        **** 
 121:main.c        **** void prvHardwareSetup( void )
 122:main.c        **** {
  59              		.loc 1 122 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 1, uses_anonymous_args = 0
  63 0000 80B5     		push	{r7, lr}
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 7, -8
  66              		.cfi_offset 14, -4
  67 0002 00AF     		add	r7, sp, #0
  68              		.cfi_def_cfa_register 7
 123:main.c        **** /* Port layer functions that need to be copied into the vector table. */
 124:main.c        **** extern void xPortPendSVHandler( void );
 125:main.c        **** extern void xPortSysTickHandler( void );
 126:main.c        **** extern void vPortSVCHandler( void );
 127:main.c        **** extern cyisraddress CyRamVectors[];
 128:main.c        **** 
 129:main.c        **** 	/* Install the OS Interrupt Handlers. */
 130:main.c        **** 	CyRamVectors[ 11 ] = ( cyisraddress ) vPortSVCHandler;
  69              		.loc 1 130 0
  70 0004 074B     		ldr	r3, .L4
  71 0006 084A     		ldr	r2, .L4+4
  72 0008 DA62     		str	r2, [r3, #44]
 131:main.c        **** 	CyRamVectors[ 14 ] = ( cyisraddress ) xPortPendSVHandler;
  73              		.loc 1 131 0
  74 000a 064B     		ldr	r3, .L4
  75 000c 074A     		ldr	r2, .L4+8
  76 000e 9A63     		str	r2, [r3, #56]
 132:main.c        **** 	CyRamVectors[ 15 ] = ( cyisraddress ) xPortSysTickHandler;
  77              		.loc 1 132 0
  78 0010 044B     		ldr	r3, .L4
  79 0012 074A     		ldr	r2, .L4+12
  80 0014 DA63     		str	r2, [r3, #60]
 133:main.c        **** 
 134:main.c        **** 	/* Start-up the peripherals. */
 135:main.c        **** 
 136:main.c        **** 	/* Start the UART. */
 137:main.c        **** 	UART_Start();
  81              		.loc 1 137 0
  82 0016 FFF7FEFF 		bl	UART_Start
 138:main.c        ****     
 139:main.c        ****     pwmClock_Start();
  83              		.loc 1 139 0
  84 001a FFF7FEFF 		bl	pwmClock_Start
 140:main.c        ****     servoPWM_Start();
  85              		.loc 1 140 0
  86 001e FFF7FEFF 		bl	servoPWM_Start
 141:main.c        **** 
 142:main.c        **** }
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 5


  87              		.loc 1 142 0
  88 0022 80BD     		pop	{r7, pc}
  89              	.L5:
  90              		.align	2
  91              	.L4:
  92 0024 00000000 		.word	CyRamVectors
  93 0028 00000000 		.word	vPortSVCHandler
  94 002c 00000000 		.word	xPortPendSVHandler
  95 0030 00000000 		.word	xPortSysTickHandler
  96              		.cfi_endproc
  97              	.LFE69:
  98              		.size	prvHardwareSetup, .-prvHardwareSetup
  99              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 100              		.align	2
 101              		.global	vApplicationStackOverflowHook
 102              		.thumb
 103              		.thumb_func
 104              		.type	vApplicationStackOverflowHook, %function
 105              	vApplicationStackOverflowHook:
 106              	.LFB70:
 143:main.c        **** /*---------------------------------------------------------------------------*/
 144:main.c        **** 
 145:main.c        **** void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName )
 146:main.c        **** {
 107              		.loc 1 146 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 16
 110              		@ frame_needed = 1, uses_anonymous_args = 0
 111              		@ link register save eliminated.
 112 0000 80B4     		push	{r7}
 113              		.cfi_def_cfa_offset 4
 114              		.cfi_offset 7, -4
 115 0002 85B0     		sub	sp, sp, #20
 116              		.cfi_def_cfa_offset 24
 117 0004 00AF     		add	r7, sp, #0
 118              		.cfi_def_cfa_register 7
 119 0006 7860     		str	r0, [r7, #4]
 120 0008 3960     		str	r1, [r7]
 121              	.LBB6:
 122              	.LBB7:
 123              		.file 2 "../../../Source/portable/GCC/ARM_CM3/portmacro.h"
   1:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     FreeRTOS V9.0.0rc2 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     All rights reserved
   4:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
   5:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
   7:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
   9:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  13:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     ***************************************************************************
  14:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 6


  17:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     ***************************************************************************
  19:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  20:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  25:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     ***************************************************************************
  26:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****      *                                                                       *
  27:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****      *                                                                       *
  32:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****      *                                                                       *
  37:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     ***************************************************************************
  38:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  39:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     defined configASSERT()?
  42:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  43:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     embedded software for free we request you assist our global community by
  45:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     participating in the support forum.
  46:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  47:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  52:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  56:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  63:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     mission critical applications that require provable dependability.
  66:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  67:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****     1 tab == 4 spaces!
  68:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** */
  69:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  70:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  71:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  72:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  73:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 7


  74:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  75:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  76:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  77:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  79:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  80:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  81:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  83:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  84:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  85:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  86:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  87:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  88:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  89:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  90:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  91:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  92:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  93:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  94:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  96:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  97:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  99:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
 100:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 101:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
 103:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #else
 105:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
 106:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
 110:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 112:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 113:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 114:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
 115:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 119:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 120:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
 121:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
 122:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
 123:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
 126:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" );													\
 129:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
 130:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** }
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 8


 131:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 132:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 137:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
 139:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
 140:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
 141:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 148:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 149:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 150:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 153:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 156:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 157:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 158:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 162:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 163:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 164:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 165:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 171:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 172:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 174:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 175:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 176:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 178:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 179:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 180:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 181:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 184:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 185:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 9


 188:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 190:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 192:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 193:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 196:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 197:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 198:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 201:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 202:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 203:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 204:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 205:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 206:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 207:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 208:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 209:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 210:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 211:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 212:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** {
 213:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 214:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 215:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 216:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 217:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 218:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 219:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 220:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 221:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 222:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 223:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 224:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 225:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 226:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 227:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 228:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 229:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** }
 230:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 231:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 232:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 233:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 234:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** {
 235:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 236:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 237:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 124              		.loc 2 237 0
 125              	@ 237 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 126 000a 4FF0A003 			mov r3, #160												
 127 000e 83F31188 		msr basepri, r3											
 128 0012 BFF36F8F 		isb														
 129 0016 BFF34F8F 		dsb														
 130              	
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 10


 131              	@ 0 "" 2
 132              		.thumb
 133 001a FB60     		str	r3, [r7, #12]
 134              	.L7:
 135              	.LBE7:
 136              	.LBE6:
 147:main.c        **** 	/* The stack space has been execeeded for a task, considering allocating more. */
 148:main.c        **** 	taskDISABLE_INTERRUPTS();
 149:main.c        **** 	for( ;; );
 137              		.loc 1 149 0 discriminator 1
 138 001c FEE7     		b	.L7
 139              		.cfi_endproc
 140              	.LFE70:
 141              		.size	vApplicationStackOverflowHook, .-vApplicationStackOverflowHook
 142 001e 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 143              		.align	2
 144              		.global	vApplicationMallocFailedHook
 145              		.thumb
 146              		.thumb_func
 147              		.type	vApplicationMallocFailedHook, %function
 148              	vApplicationMallocFailedHook:
 149              	.LFB71:
 150:main.c        **** }
 151:main.c        **** /*---------------------------------------------------------------------------*/
 152:main.c        **** 
 153:main.c        **** void vApplicationMallocFailedHook( void )
 154:main.c        **** {
 150              		.loc 1 154 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 8
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 80B4     		push	{r7}
 156              		.cfi_def_cfa_offset 4
 157              		.cfi_offset 7, -4
 158 0002 83B0     		sub	sp, sp, #12
 159              		.cfi_def_cfa_offset 16
 160 0004 00AF     		add	r7, sp, #0
 161              		.cfi_def_cfa_register 7
 162              	.LBB8:
 163              	.LBB9:
 164              		.loc 2 237 0
 165              	@ 237 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 166 0006 4FF0A003 			mov r3, #160												
 167 000a 83F31188 		msr basepri, r3											
 168 000e BFF36F8F 		isb														
 169 0012 BFF34F8F 		dsb														
 170              	
 171              	@ 0 "" 2
 172              		.thumb
 173 0016 7B60     		str	r3, [r7, #4]
 174              	.L9:
 175              	.LBE9:
 176              	.LBE8:
 155:main.c        **** 	/* The heap space has been execeeded. */
 156:main.c        **** 	taskDISABLE_INTERRUPTS();
 157:main.c        **** 	for( ;; );
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 11


 177              		.loc 1 157 0 discriminator 1
 178 0018 FEE7     		b	.L9
 179              		.cfi_endproc
 180              	.LFE71:
 181              		.size	vApplicationMallocFailedHook, .-vApplicationMallocFailedHook
 182 001a 00BF     		.text
 183              	.Letext0:
 184              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 185              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 186              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 187              		.file 6 "../../../Source/include/task.h"
 188              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 189              		.section	.debug_info,"",%progbits
 190              	.Ldebug_info0:
 191 0000 F3010000 		.4byte	0x1f3
 192 0004 0400     		.2byte	0x4
 193 0006 00000000 		.4byte	.Ldebug_abbrev0
 194 000a 04       		.byte	0x4
 195 000b 01       		.uleb128 0x1
 196 000c 35000000 		.4byte	.LASF29
 197 0010 01       		.byte	0x1
 198 0011 3F020000 		.4byte	.LASF30
 199 0015 73010000 		.4byte	.LASF31
 200 0019 00000000 		.4byte	.Ldebug_ranges0+0
 201 001d 00000000 		.4byte	0
 202 0021 00000000 		.4byte	.Ldebug_line0
 203 0025 02       		.uleb128 0x2
 204 0026 01       		.byte	0x1
 205 0027 06       		.byte	0x6
 206 0028 96020000 		.4byte	.LASF0
 207 002c 02       		.uleb128 0x2
 208 002d 01       		.byte	0x1
 209 002e 08       		.byte	0x8
 210 002f EE000000 		.4byte	.LASF1
 211 0033 02       		.uleb128 0x2
 212 0034 02       		.byte	0x2
 213 0035 05       		.byte	0x5
 214 0036 62020000 		.4byte	.LASF2
 215 003a 02       		.uleb128 0x2
 216 003b 02       		.byte	0x2
 217 003c 07       		.byte	0x7
 218 003d 19010000 		.4byte	.LASF3
 219 0041 03       		.uleb128 0x3
 220 0042 2B000000 		.4byte	.LASF5
 221 0046 03       		.byte	0x3
 222 0047 3F       		.byte	0x3f
 223 0048 4C000000 		.4byte	0x4c
 224 004c 02       		.uleb128 0x2
 225 004d 04       		.byte	0x4
 226 004e 05       		.byte	0x5
 227 004f 8D020000 		.4byte	.LASF4
 228 0053 03       		.uleb128 0x3
 229 0054 FC000000 		.4byte	.LASF6
 230 0058 03       		.byte	0x3
 231 0059 41       		.byte	0x41
 232 005a 5E000000 		.4byte	0x5e
 233 005e 02       		.uleb128 0x2
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 12


 234 005f 04       		.byte	0x4
 235 0060 07       		.byte	0x7
 236 0061 07010000 		.4byte	.LASF7
 237 0065 02       		.uleb128 0x2
 238 0066 08       		.byte	0x8
 239 0067 05       		.byte	0x5
 240 0068 31020000 		.4byte	.LASF8
 241 006c 02       		.uleb128 0x2
 242 006d 08       		.byte	0x8
 243 006e 07       		.byte	0x7
 244 006f DF010000 		.4byte	.LASF9
 245 0073 04       		.uleb128 0x4
 246 0074 04       		.byte	0x4
 247 0075 05       		.byte	0x5
 248 0076 696E7400 		.ascii	"int\000"
 249 007a 02       		.uleb128 0x2
 250 007b 04       		.byte	0x4
 251 007c 07       		.byte	0x7
 252 007d 66010000 		.4byte	.LASF10
 253 0081 03       		.uleb128 0x3
 254 0082 20020000 		.4byte	.LASF11
 255 0086 04       		.byte	0x4
 256 0087 2C       		.byte	0x2c
 257 0088 41000000 		.4byte	0x41
 258 008c 03       		.uleb128 0x3
 259 008d 84020000 		.4byte	.LASF12
 260 0091 04       		.byte	0x4
 261 0092 2D       		.byte	0x2d
 262 0093 53000000 		.4byte	0x53
 263 0097 02       		.uleb128 0x2
 264 0098 04       		.byte	0x4
 265 0099 04       		.byte	0x4
 266 009a E8000000 		.4byte	.LASF13
 267 009e 02       		.uleb128 0x2
 268 009f 08       		.byte	0x8
 269 00a0 04       		.byte	0x4
 270 00a1 39010000 		.4byte	.LASF14
 271 00a5 02       		.uleb128 0x2
 272 00a6 01       		.byte	0x1
 273 00a7 08       		.byte	0x8
 274 00a8 46020000 		.4byte	.LASF15
 275 00ac 05       		.uleb128 0x5
 276 00ad F6010000 		.4byte	.LASF16
 277 00b1 05       		.byte	0x5
 278 00b2 4E02     		.2byte	0x24e
 279 00b4 B8000000 		.4byte	0xb8
 280 00b8 06       		.uleb128 0x6
 281 00b9 04       		.byte	0x4
 282 00ba BE000000 		.4byte	0xbe
 283 00be 07       		.uleb128 0x7
 284 00bf 02       		.uleb128 0x2
 285 00c0 04       		.byte	0x4
 286 00c1 07       		.byte	0x7
 287 00c2 28020000 		.4byte	.LASF17
 288 00c6 08       		.uleb128 0x8
 289 00c7 04       		.byte	0x4
 290 00c8 06       		.uleb128 0x6
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 13


 291 00c9 04       		.byte	0x4
 292 00ca A5000000 		.4byte	0xa5
 293 00ce 03       		.uleb128 0x3
 294 00cf A2020000 		.4byte	.LASF18
 295 00d3 02       		.byte	0x2
 296 00d4 63       		.byte	0x63
 297 00d5 5E000000 		.4byte	0x5e
 298 00d9 03       		.uleb128 0x3
 299 00da 77020000 		.4byte	.LASF19
 300 00de 06       		.byte	0x6
 301 00df 67       		.byte	0x67
 302 00e0 C6000000 		.4byte	0xc6
 303 00e4 09       		.uleb128 0x9
 304 00e5 C3000000 		.4byte	.LASF32
 305 00e9 02       		.byte	0x2
 306 00ea E9       		.byte	0xe9
 307 00eb 03       		.byte	0x3
 308 00ec FC000000 		.4byte	0xfc
 309 00f0 0A       		.uleb128 0xa
 310 00f1 40010000 		.4byte	.LASF33
 311 00f5 02       		.byte	0x2
 312 00f6 EB       		.byte	0xeb
 313 00f7 8C000000 		.4byte	0x8c
 314 00fb 00       		.byte	0
 315 00fc 0B       		.uleb128 0xb
 316 00fd 4D010000 		.4byte	.LASF34
 317 0101 01       		.byte	0x1
 318 0102 66       		.byte	0x66
 319 0103 00000000 		.4byte	.LFB68
 320 0107 1A000000 		.4byte	.LFE68-.LFB68
 321 010b 01       		.uleb128 0x1
 322 010c 9C       		.byte	0x9c
 323 010d 0C       		.uleb128 0xc
 324 010e AE020000 		.4byte	.LASF35
 325 0112 01       		.byte	0x1
 326 0113 79       		.byte	0x79
 327 0114 00000000 		.4byte	.LFB69
 328 0118 34000000 		.4byte	.LFE69-.LFB69
 329 011c 01       		.uleb128 0x1
 330 011d 9C       		.byte	0x9c
 331 011e 43010000 		.4byte	0x143
 332 0122 0D       		.uleb128 0xd
 333 0123 D5000000 		.4byte	.LASF20
 334 0127 01       		.byte	0x1
 335 0128 7C       		.byte	0x7c
 336 0129 0D       		.uleb128 0xd
 337 012a 52010000 		.4byte	.LASF21
 338 012e 01       		.byte	0x1
 339 012f 7D       		.byte	0x7d
 340 0130 0D       		.uleb128 0xd
 341 0131 4B020000 		.4byte	.LASF22
 342 0135 01       		.byte	0x1
 343 0136 7E       		.byte	0x7e
 344 0137 0E       		.uleb128 0xe
 345 0138 1E000000 		.4byte	.LASF27
 346 013c 01       		.byte	0x1
 347 013d 7F       		.byte	0x7f
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 14


 348 013e 43010000 		.4byte	0x143
 349 0142 00       		.byte	0
 350 0143 0F       		.uleb128 0xf
 351 0144 AC000000 		.4byte	0xac
 352 0148 4E010000 		.4byte	0x14e
 353 014c 10       		.uleb128 0x10
 354 014d 00       		.byte	0
 355 014e 11       		.uleb128 0x11
 356 014f 00000000 		.4byte	.LASF25
 357 0153 01       		.byte	0x1
 358 0154 91       		.byte	0x91
 359 0155 00000000 		.4byte	.LFB70
 360 0159 1E000000 		.4byte	.LFE70-.LFB70
 361 015d 01       		.uleb128 0x1
 362 015e 9C       		.byte	0x9c
 363 015f A2010000 		.4byte	0x1a2
 364 0163 12       		.uleb128 0x12
 365 0164 5B020000 		.4byte	.LASF23
 366 0168 01       		.byte	0x1
 367 0169 91       		.byte	0x91
 368 016a D9000000 		.4byte	0xd9
 369 016e 02       		.uleb128 0x2
 370 016f 91       		.byte	0x91
 371 0170 6C       		.sleb128 -20
 372 0171 12       		.uleb128 0x12
 373 0172 6C020000 		.4byte	.LASF24
 374 0176 01       		.byte	0x1
 375 0177 91       		.byte	0x91
 376 0178 C8000000 		.4byte	0xc8
 377 017c 02       		.uleb128 0x2
 378 017d 91       		.byte	0x91
 379 017e 68       		.sleb128 -24
 380 017f 13       		.uleb128 0x13
 381 0180 E4000000 		.4byte	0xe4
 382 0184 0A000000 		.4byte	.LBB6
 383 0188 12000000 		.4byte	.LBE6-.LBB6
 384 018c 01       		.byte	0x1
 385 018d 94       		.byte	0x94
 386 018e 14       		.uleb128 0x14
 387 018f 0A000000 		.4byte	.LBB7
 388 0193 12000000 		.4byte	.LBE7-.LBB7
 389 0197 15       		.uleb128 0x15
 390 0198 F0000000 		.4byte	0xf0
 391 019c 02       		.uleb128 0x2
 392 019d 91       		.byte	0x91
 393 019e 74       		.sleb128 -12
 394 019f 00       		.byte	0
 395 01a0 00       		.byte	0
 396 01a1 00       		.byte	0
 397 01a2 11       		.uleb128 0x11
 398 01a3 03020000 		.4byte	.LASF26
 399 01a7 01       		.byte	0x1
 400 01a8 99       		.byte	0x99
 401 01a9 00000000 		.4byte	.LFB71
 402 01ad 1A000000 		.4byte	.LFE71-.LFB71
 403 01b1 01       		.uleb128 0x1
 404 01b2 9C       		.byte	0x9c
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 15


 405 01b3 DA010000 		.4byte	0x1da
 406 01b7 13       		.uleb128 0x13
 407 01b8 E4000000 		.4byte	0xe4
 408 01bc 06000000 		.4byte	.LBB8
 409 01c0 12000000 		.4byte	.LBE8-.LBB8
 410 01c4 01       		.byte	0x1
 411 01c5 9C       		.byte	0x9c
 412 01c6 14       		.uleb128 0x14
 413 01c7 06000000 		.4byte	.LBB9
 414 01cb 12000000 		.4byte	.LBE9-.LBB9
 415 01cf 15       		.uleb128 0x15
 416 01d0 F0000000 		.4byte	0xf0
 417 01d4 02       		.uleb128 0x2
 418 01d5 91       		.byte	0x91
 419 01d6 74       		.sleb128 -12
 420 01d7 00       		.byte	0
 421 01d8 00       		.byte	0
 422 01d9 00       		.byte	0
 423 01da 16       		.uleb128 0x16
 424 01db 2C010000 		.4byte	.LASF28
 425 01df 07       		.byte	0x7
 426 01e0 9606     		.2byte	0x696
 427 01e2 E6010000 		.4byte	0x1e6
 428 01e6 17       		.uleb128 0x17
 429 01e7 81000000 		.4byte	0x81
 430 01eb 0E       		.uleb128 0xe
 431 01ec 1E000000 		.4byte	.LASF27
 432 01f0 01       		.byte	0x1
 433 01f1 7F       		.byte	0x7f
 434 01f2 43010000 		.4byte	0x143
 435 01f6 00       		.byte	0
 436              		.section	.debug_abbrev,"",%progbits
 437              	.Ldebug_abbrev0:
 438 0000 01       		.uleb128 0x1
 439 0001 11       		.uleb128 0x11
 440 0002 01       		.byte	0x1
 441 0003 25       		.uleb128 0x25
 442 0004 0E       		.uleb128 0xe
 443 0005 13       		.uleb128 0x13
 444 0006 0B       		.uleb128 0xb
 445 0007 03       		.uleb128 0x3
 446 0008 0E       		.uleb128 0xe
 447 0009 1B       		.uleb128 0x1b
 448 000a 0E       		.uleb128 0xe
 449 000b 55       		.uleb128 0x55
 450 000c 17       		.uleb128 0x17
 451 000d 11       		.uleb128 0x11
 452 000e 01       		.uleb128 0x1
 453 000f 10       		.uleb128 0x10
 454 0010 17       		.uleb128 0x17
 455 0011 00       		.byte	0
 456 0012 00       		.byte	0
 457 0013 02       		.uleb128 0x2
 458 0014 24       		.uleb128 0x24
 459 0015 00       		.byte	0
 460 0016 0B       		.uleb128 0xb
 461 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 16


 462 0018 3E       		.uleb128 0x3e
 463 0019 0B       		.uleb128 0xb
 464 001a 03       		.uleb128 0x3
 465 001b 0E       		.uleb128 0xe
 466 001c 00       		.byte	0
 467 001d 00       		.byte	0
 468 001e 03       		.uleb128 0x3
 469 001f 16       		.uleb128 0x16
 470 0020 00       		.byte	0
 471 0021 03       		.uleb128 0x3
 472 0022 0E       		.uleb128 0xe
 473 0023 3A       		.uleb128 0x3a
 474 0024 0B       		.uleb128 0xb
 475 0025 3B       		.uleb128 0x3b
 476 0026 0B       		.uleb128 0xb
 477 0027 49       		.uleb128 0x49
 478 0028 13       		.uleb128 0x13
 479 0029 00       		.byte	0
 480 002a 00       		.byte	0
 481 002b 04       		.uleb128 0x4
 482 002c 24       		.uleb128 0x24
 483 002d 00       		.byte	0
 484 002e 0B       		.uleb128 0xb
 485 002f 0B       		.uleb128 0xb
 486 0030 3E       		.uleb128 0x3e
 487 0031 0B       		.uleb128 0xb
 488 0032 03       		.uleb128 0x3
 489 0033 08       		.uleb128 0x8
 490 0034 00       		.byte	0
 491 0035 00       		.byte	0
 492 0036 05       		.uleb128 0x5
 493 0037 16       		.uleb128 0x16
 494 0038 00       		.byte	0
 495 0039 03       		.uleb128 0x3
 496 003a 0E       		.uleb128 0xe
 497 003b 3A       		.uleb128 0x3a
 498 003c 0B       		.uleb128 0xb
 499 003d 3B       		.uleb128 0x3b
 500 003e 05       		.uleb128 0x5
 501 003f 49       		.uleb128 0x49
 502 0040 13       		.uleb128 0x13
 503 0041 00       		.byte	0
 504 0042 00       		.byte	0
 505 0043 06       		.uleb128 0x6
 506 0044 0F       		.uleb128 0xf
 507 0045 00       		.byte	0
 508 0046 0B       		.uleb128 0xb
 509 0047 0B       		.uleb128 0xb
 510 0048 49       		.uleb128 0x49
 511 0049 13       		.uleb128 0x13
 512 004a 00       		.byte	0
 513 004b 00       		.byte	0
 514 004c 07       		.uleb128 0x7
 515 004d 15       		.uleb128 0x15
 516 004e 00       		.byte	0
 517 004f 27       		.uleb128 0x27
 518 0050 19       		.uleb128 0x19
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 17


 519 0051 00       		.byte	0
 520 0052 00       		.byte	0
 521 0053 08       		.uleb128 0x8
 522 0054 0F       		.uleb128 0xf
 523 0055 00       		.byte	0
 524 0056 0B       		.uleb128 0xb
 525 0057 0B       		.uleb128 0xb
 526 0058 00       		.byte	0
 527 0059 00       		.byte	0
 528 005a 09       		.uleb128 0x9
 529 005b 2E       		.uleb128 0x2e
 530 005c 01       		.byte	0x1
 531 005d 03       		.uleb128 0x3
 532 005e 0E       		.uleb128 0xe
 533 005f 3A       		.uleb128 0x3a
 534 0060 0B       		.uleb128 0xb
 535 0061 3B       		.uleb128 0x3b
 536 0062 0B       		.uleb128 0xb
 537 0063 27       		.uleb128 0x27
 538 0064 19       		.uleb128 0x19
 539 0065 20       		.uleb128 0x20
 540 0066 0B       		.uleb128 0xb
 541 0067 01       		.uleb128 0x1
 542 0068 13       		.uleb128 0x13
 543 0069 00       		.byte	0
 544 006a 00       		.byte	0
 545 006b 0A       		.uleb128 0xa
 546 006c 34       		.uleb128 0x34
 547 006d 00       		.byte	0
 548 006e 03       		.uleb128 0x3
 549 006f 0E       		.uleb128 0xe
 550 0070 3A       		.uleb128 0x3a
 551 0071 0B       		.uleb128 0xb
 552 0072 3B       		.uleb128 0x3b
 553 0073 0B       		.uleb128 0xb
 554 0074 49       		.uleb128 0x49
 555 0075 13       		.uleb128 0x13
 556 0076 00       		.byte	0
 557 0077 00       		.byte	0
 558 0078 0B       		.uleb128 0xb
 559 0079 2E       		.uleb128 0x2e
 560 007a 00       		.byte	0
 561 007b 3F       		.uleb128 0x3f
 562 007c 19       		.uleb128 0x19
 563 007d 03       		.uleb128 0x3
 564 007e 0E       		.uleb128 0xe
 565 007f 3A       		.uleb128 0x3a
 566 0080 0B       		.uleb128 0xb
 567 0081 3B       		.uleb128 0x3b
 568 0082 0B       		.uleb128 0xb
 569 0083 27       		.uleb128 0x27
 570 0084 19       		.uleb128 0x19
 571 0085 11       		.uleb128 0x11
 572 0086 01       		.uleb128 0x1
 573 0087 12       		.uleb128 0x12
 574 0088 06       		.uleb128 0x6
 575 0089 40       		.uleb128 0x40
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 18


 576 008a 18       		.uleb128 0x18
 577 008b 9642     		.uleb128 0x2116
 578 008d 19       		.uleb128 0x19
 579 008e 00       		.byte	0
 580 008f 00       		.byte	0
 581 0090 0C       		.uleb128 0xc
 582 0091 2E       		.uleb128 0x2e
 583 0092 01       		.byte	0x1
 584 0093 03       		.uleb128 0x3
 585 0094 0E       		.uleb128 0xe
 586 0095 3A       		.uleb128 0x3a
 587 0096 0B       		.uleb128 0xb
 588 0097 3B       		.uleb128 0x3b
 589 0098 0B       		.uleb128 0xb
 590 0099 27       		.uleb128 0x27
 591 009a 19       		.uleb128 0x19
 592 009b 11       		.uleb128 0x11
 593 009c 01       		.uleb128 0x1
 594 009d 12       		.uleb128 0x12
 595 009e 06       		.uleb128 0x6
 596 009f 40       		.uleb128 0x40
 597 00a0 18       		.uleb128 0x18
 598 00a1 9642     		.uleb128 0x2116
 599 00a3 19       		.uleb128 0x19
 600 00a4 01       		.uleb128 0x1
 601 00a5 13       		.uleb128 0x13
 602 00a6 00       		.byte	0
 603 00a7 00       		.byte	0
 604 00a8 0D       		.uleb128 0xd
 605 00a9 2E       		.uleb128 0x2e
 606 00aa 00       		.byte	0
 607 00ab 3F       		.uleb128 0x3f
 608 00ac 19       		.uleb128 0x19
 609 00ad 03       		.uleb128 0x3
 610 00ae 0E       		.uleb128 0xe
 611 00af 3A       		.uleb128 0x3a
 612 00b0 0B       		.uleb128 0xb
 613 00b1 3B       		.uleb128 0x3b
 614 00b2 0B       		.uleb128 0xb
 615 00b3 27       		.uleb128 0x27
 616 00b4 19       		.uleb128 0x19
 617 00b5 3C       		.uleb128 0x3c
 618 00b6 19       		.uleb128 0x19
 619 00b7 00       		.byte	0
 620 00b8 00       		.byte	0
 621 00b9 0E       		.uleb128 0xe
 622 00ba 34       		.uleb128 0x34
 623 00bb 00       		.byte	0
 624 00bc 03       		.uleb128 0x3
 625 00bd 0E       		.uleb128 0xe
 626 00be 3A       		.uleb128 0x3a
 627 00bf 0B       		.uleb128 0xb
 628 00c0 3B       		.uleb128 0x3b
 629 00c1 0B       		.uleb128 0xb
 630 00c2 49       		.uleb128 0x49
 631 00c3 13       		.uleb128 0x13
 632 00c4 3F       		.uleb128 0x3f
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 19


 633 00c5 19       		.uleb128 0x19
 634 00c6 3C       		.uleb128 0x3c
 635 00c7 19       		.uleb128 0x19
 636 00c8 00       		.byte	0
 637 00c9 00       		.byte	0
 638 00ca 0F       		.uleb128 0xf
 639 00cb 01       		.uleb128 0x1
 640 00cc 01       		.byte	0x1
 641 00cd 49       		.uleb128 0x49
 642 00ce 13       		.uleb128 0x13
 643 00cf 01       		.uleb128 0x1
 644 00d0 13       		.uleb128 0x13
 645 00d1 00       		.byte	0
 646 00d2 00       		.byte	0
 647 00d3 10       		.uleb128 0x10
 648 00d4 21       		.uleb128 0x21
 649 00d5 00       		.byte	0
 650 00d6 00       		.byte	0
 651 00d7 00       		.byte	0
 652 00d8 11       		.uleb128 0x11
 653 00d9 2E       		.uleb128 0x2e
 654 00da 01       		.byte	0x1
 655 00db 3F       		.uleb128 0x3f
 656 00dc 19       		.uleb128 0x19
 657 00dd 03       		.uleb128 0x3
 658 00de 0E       		.uleb128 0xe
 659 00df 3A       		.uleb128 0x3a
 660 00e0 0B       		.uleb128 0xb
 661 00e1 3B       		.uleb128 0x3b
 662 00e2 0B       		.uleb128 0xb
 663 00e3 27       		.uleb128 0x27
 664 00e4 19       		.uleb128 0x19
 665 00e5 11       		.uleb128 0x11
 666 00e6 01       		.uleb128 0x1
 667 00e7 12       		.uleb128 0x12
 668 00e8 06       		.uleb128 0x6
 669 00e9 40       		.uleb128 0x40
 670 00ea 18       		.uleb128 0x18
 671 00eb 9742     		.uleb128 0x2117
 672 00ed 19       		.uleb128 0x19
 673 00ee 01       		.uleb128 0x1
 674 00ef 13       		.uleb128 0x13
 675 00f0 00       		.byte	0
 676 00f1 00       		.byte	0
 677 00f2 12       		.uleb128 0x12
 678 00f3 05       		.uleb128 0x5
 679 00f4 00       		.byte	0
 680 00f5 03       		.uleb128 0x3
 681 00f6 0E       		.uleb128 0xe
 682 00f7 3A       		.uleb128 0x3a
 683 00f8 0B       		.uleb128 0xb
 684 00f9 3B       		.uleb128 0x3b
 685 00fa 0B       		.uleb128 0xb
 686 00fb 49       		.uleb128 0x49
 687 00fc 13       		.uleb128 0x13
 688 00fd 02       		.uleb128 0x2
 689 00fe 18       		.uleb128 0x18
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 20


 690 00ff 00       		.byte	0
 691 0100 00       		.byte	0
 692 0101 13       		.uleb128 0x13
 693 0102 1D       		.uleb128 0x1d
 694 0103 01       		.byte	0x1
 695 0104 31       		.uleb128 0x31
 696 0105 13       		.uleb128 0x13
 697 0106 11       		.uleb128 0x11
 698 0107 01       		.uleb128 0x1
 699 0108 12       		.uleb128 0x12
 700 0109 06       		.uleb128 0x6
 701 010a 58       		.uleb128 0x58
 702 010b 0B       		.uleb128 0xb
 703 010c 59       		.uleb128 0x59
 704 010d 0B       		.uleb128 0xb
 705 010e 00       		.byte	0
 706 010f 00       		.byte	0
 707 0110 14       		.uleb128 0x14
 708 0111 0B       		.uleb128 0xb
 709 0112 01       		.byte	0x1
 710 0113 11       		.uleb128 0x11
 711 0114 01       		.uleb128 0x1
 712 0115 12       		.uleb128 0x12
 713 0116 06       		.uleb128 0x6
 714 0117 00       		.byte	0
 715 0118 00       		.byte	0
 716 0119 15       		.uleb128 0x15
 717 011a 34       		.uleb128 0x34
 718 011b 00       		.byte	0
 719 011c 31       		.uleb128 0x31
 720 011d 13       		.uleb128 0x13
 721 011e 02       		.uleb128 0x2
 722 011f 18       		.uleb128 0x18
 723 0120 00       		.byte	0
 724 0121 00       		.byte	0
 725 0122 16       		.uleb128 0x16
 726 0123 34       		.uleb128 0x34
 727 0124 00       		.byte	0
 728 0125 03       		.uleb128 0x3
 729 0126 0E       		.uleb128 0xe
 730 0127 3A       		.uleb128 0x3a
 731 0128 0B       		.uleb128 0xb
 732 0129 3B       		.uleb128 0x3b
 733 012a 05       		.uleb128 0x5
 734 012b 49       		.uleb128 0x49
 735 012c 13       		.uleb128 0x13
 736 012d 3F       		.uleb128 0x3f
 737 012e 19       		.uleb128 0x19
 738 012f 3C       		.uleb128 0x3c
 739 0130 19       		.uleb128 0x19
 740 0131 00       		.byte	0
 741 0132 00       		.byte	0
 742 0133 17       		.uleb128 0x17
 743 0134 35       		.uleb128 0x35
 744 0135 00       		.byte	0
 745 0136 49       		.uleb128 0x49
 746 0137 13       		.uleb128 0x13
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 21


 747 0138 00       		.byte	0
 748 0139 00       		.byte	0
 749 013a 00       		.byte	0
 750              		.section	.debug_aranges,"",%progbits
 751 0000 34000000 		.4byte	0x34
 752 0004 0200     		.2byte	0x2
 753 0006 00000000 		.4byte	.Ldebug_info0
 754 000a 04       		.byte	0x4
 755 000b 00       		.byte	0
 756 000c 0000     		.2byte	0
 757 000e 0000     		.2byte	0
 758 0010 00000000 		.4byte	.LFB68
 759 0014 1A000000 		.4byte	.LFE68-.LFB68
 760 0018 00000000 		.4byte	.LFB69
 761 001c 34000000 		.4byte	.LFE69-.LFB69
 762 0020 00000000 		.4byte	.LFB70
 763 0024 1E000000 		.4byte	.LFE70-.LFB70
 764 0028 00000000 		.4byte	.LFB71
 765 002c 1A000000 		.4byte	.LFE71-.LFB71
 766 0030 00000000 		.4byte	0
 767 0034 00000000 		.4byte	0
 768              		.section	.debug_ranges,"",%progbits
 769              	.Ldebug_ranges0:
 770 0000 00000000 		.4byte	.LFB68
 771 0004 1A000000 		.4byte	.LFE68
 772 0008 00000000 		.4byte	.LFB69
 773 000c 34000000 		.4byte	.LFE69
 774 0010 00000000 		.4byte	.LFB70
 775 0014 1E000000 		.4byte	.LFE70
 776 0018 00000000 		.4byte	.LFB71
 777 001c 1A000000 		.4byte	.LFE71
 778 0020 00000000 		.4byte	0
 779 0024 00000000 		.4byte	0
 780              		.section	.debug_line,"",%progbits
 781              	.Ldebug_line0:
 782 0000 12020000 		.section	.debug_str,"MS",%progbits,1
 782      02009D01 
 782      00000201 
 782      FB0E0D00 
 782      01010101 
 783              	.LASF25:
 784 0000 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 784      6C696361 
 784      74696F6E 
 784      53746163 
 784      6B4F7665 
 785              	.LASF27:
 786 001e 43795261 		.ascii	"CyRamVectors\000"
 786      6D566563 
 786      746F7273 
 786      00
 787              	.LASF5:
 788 002b 5F5F696E 		.ascii	"__int32_t\000"
 788      7433325F 
 788      7400
 789              	.LASF29:
 790 0035 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 22


 790      4320342E 
 790      392E3320 
 790      32303135 
 790      30333033 
 791 0068 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 791      20726576 
 791      6973696F 
 791      6E203232 
 791      31323230 
 792 009b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 792      66756E63 
 792      74696F6E 
 792      2D736563 
 792      74696F6E 
 793              	.LASF32:
 794 00c3 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 794      74526169 
 794      73654241 
 794      53455052 
 794      4900
 795              	.LASF20:
 796 00d5 78506F72 		.ascii	"xPortPendSVHandler\000"
 796      7450656E 
 796      64535648 
 796      616E646C 
 796      657200
 797              	.LASF13:
 798 00e8 666C6F61 		.ascii	"float\000"
 798      7400
 799              	.LASF1:
 800 00ee 756E7369 		.ascii	"unsigned char\000"
 800      676E6564 
 800      20636861 
 800      7200
 801              	.LASF6:
 802 00fc 5F5F7569 		.ascii	"__uint32_t\000"
 802      6E743332 
 802      5F7400
 803              	.LASF7:
 804 0107 6C6F6E67 		.ascii	"long unsigned int\000"
 804      20756E73 
 804      69676E65 
 804      6420696E 
 804      7400
 805              	.LASF3:
 806 0119 73686F72 		.ascii	"short unsigned int\000"
 806      7420756E 
 806      7369676E 
 806      65642069 
 806      6E7400
 807              	.LASF28:
 808 012c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 808      52784275 
 808      66666572 
 808      00
 809              	.LASF14:
 810 0139 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 23


 810      6C6500
 811              	.LASF33:
 812 0140 756C4E65 		.ascii	"ulNewBASEPRI\000"
 812      77424153 
 812      45505249 
 812      00
 813              	.LASF34:
 814 014d 6D61696E 		.ascii	"main\000"
 814      00
 815              	.LASF21:
 816 0152 78506F72 		.ascii	"xPortSysTickHandler\000"
 816      74537973 
 816      5469636B 
 816      48616E64 
 816      6C657200 
 817              	.LASF10:
 818 0166 756E7369 		.ascii	"unsigned int\000"
 818      676E6564 
 818      20696E74 
 818      00
 819              	.LASF31:
 820 0173 433A5C55 		.ascii	"C:\\Users\\NGGMLGM\\Documents\\UWE\\GDIP\\GDIP\\Fre"
 820      73657273 
 820      5C4E4747 
 820      4D4C474D 
 820      5C446F63 
 821 019f 6552544F 		.ascii	"eRTOS\\Demo\\CORTEX_CY8C5588_PSoC_Creator_GCC\\Free"
 821      535C4465 
 821      6D6F5C43 
 821      4F525445 
 821      585F4359 
 822 01cf 52544F53 		.ascii	"RTOS_Demo.cydsn\000"
 822      5F44656D 
 822      6F2E6379 
 822      64736E00 
 823              	.LASF9:
 824 01df 6C6F6E67 		.ascii	"long long unsigned int\000"
 824      206C6F6E 
 824      6720756E 
 824      7369676E 
 824      65642069 
 825              	.LASF16:
 826 01f6 63796973 		.ascii	"cyisraddress\000"
 826      72616464 
 826      72657373 
 826      00
 827              	.LASF26:
 828 0203 76417070 		.ascii	"vApplicationMallocFailedHook\000"
 828      6C696361 
 828      74696F6E 
 828      4D616C6C 
 828      6F634661 
 829              	.LASF11:
 830 0220 696E7433 		.ascii	"int32_t\000"
 830      325F7400 
 831              	.LASF17:
 832 0228 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 24


 832      74797065 
 832      00
 833              	.LASF8:
 834 0231 6C6F6E67 		.ascii	"long long int\000"
 834      206C6F6E 
 834      6720696E 
 834      7400
 835              	.LASF30:
 836 023f 6D61696E 		.ascii	"main.c\000"
 836      2E6300
 837              	.LASF15:
 838 0246 63686172 		.ascii	"char\000"
 838      00
 839              	.LASF22:
 840 024b 76506F72 		.ascii	"vPortSVCHandler\000"
 840      74535643 
 840      48616E64 
 840      6C657200 
 841              	.LASF23:
 842 025b 70785461 		.ascii	"pxTask\000"
 842      736B00
 843              	.LASF2:
 844 0262 73686F72 		.ascii	"short int\000"
 844      7420696E 
 844      7400
 845              	.LASF24:
 846 026c 70635461 		.ascii	"pcTaskName\000"
 846      736B4E61 
 846      6D6500
 847              	.LASF19:
 848 0277 5461736B 		.ascii	"TaskHandle_t\000"
 848      48616E64 
 848      6C655F74 
 848      00
 849              	.LASF12:
 850 0284 75696E74 		.ascii	"uint32_t\000"
 850      33325F74 
 850      00
 851              	.LASF4:
 852 028d 6C6F6E67 		.ascii	"long int\000"
 852      20696E74 
 852      00
 853              	.LASF0:
 854 0296 7369676E 		.ascii	"signed char\000"
 854      65642063 
 854      68617200 
 855              	.LASF18:
 856 02a2 55426173 		.ascii	"UBaseType_t\000"
 856      65547970 
 856      655F7400 
 857              	.LASF35:
 858 02ae 70727648 		.ascii	"prvHardwareSetup\000"
 858      61726477 
 858      61726553 
 858      65747570 
 858      00
 859              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccgCoeGO.s 			page 25


