ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\cc53LTXW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"TimerTest.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	usMaxJitter
  19              		.bss
  20              		.align	1
  21              		.type	usMaxJitter, %object
  22              		.size	usMaxJitter, 2
  23              	usMaxJitter:
  24 0000 0000     		.space	2
  25              		.section	.text.vSetupTimerTest,"ax",%progbits
  26              		.align	2
  27              		.global	vSetupTimerTest
  28              		.thumb
  29              		.thumb_func
  30              		.type	vSetupTimerTest, %function
  31              	vSetupTimerTest:
  32              	.LFB68:
  33              		.file 1 "TimerTest.c"
   1:TimerTest.c   **** /*
   2:TimerTest.c   ****     FreeRTOS V9.0.0rc2 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:TimerTest.c   ****     All rights reserved
   4:TimerTest.c   **** 
   5:TimerTest.c   ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:TimerTest.c   **** 
   7:TimerTest.c   ****     This file is part of the FreeRTOS distribution.
   8:TimerTest.c   **** 
   9:TimerTest.c   ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:TimerTest.c   ****     the terms of the GNU General Public License (version 2) as published by the
  11:TimerTest.c   ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:TimerTest.c   **** 
  13:TimerTest.c   ****     ***************************************************************************
  14:TimerTest.c   ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:TimerTest.c   ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:TimerTest.c   ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:TimerTest.c   ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:TimerTest.c   ****     ***************************************************************************
  19:TimerTest.c   **** 
  20:TimerTest.c   ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:TimerTest.c   ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:TimerTest.c   ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:TimerTest.c   ****     link: http://www.freertos.org/a00114.html
  24:TimerTest.c   **** 
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\cc53LTXW.s 			page 2


  25:TimerTest.c   ****     ***************************************************************************
  26:TimerTest.c   ****      *                                                                       *
  27:TimerTest.c   ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:TimerTest.c   ****      *    robust, strictly quality controlled, supported, and cross          *
  29:TimerTest.c   ****      *    platform software that is more than just the market leader, it     *
  30:TimerTest.c   ****      *    is the industry's de facto standard.                               *
  31:TimerTest.c   ****      *                                                                       *
  32:TimerTest.c   ****      *    Help yourself get started quickly while simultaneously helping     *
  33:TimerTest.c   ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:TimerTest.c   ****      *    tutorial book, reference manual, or both:                          *
  35:TimerTest.c   ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:TimerTest.c   ****      *                                                                       *
  37:TimerTest.c   ****     ***************************************************************************
  38:TimerTest.c   **** 
  39:TimerTest.c   ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:TimerTest.c   ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:TimerTest.c   ****     defined configASSERT()?
  42:TimerTest.c   **** 
  43:TimerTest.c   ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:TimerTest.c   ****     embedded software for free we request you assist our global community by
  45:TimerTest.c   ****     participating in the support forum.
  46:TimerTest.c   **** 
  47:TimerTest.c   ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:TimerTest.c   ****     be as productive as possible as early as possible.  Now you can receive
  49:TimerTest.c   ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:TimerTest.c   ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:TimerTest.c   **** 
  52:TimerTest.c   ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:TimerTest.c   ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:TimerTest.c   ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:TimerTest.c   **** 
  56:TimerTest.c   ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:TimerTest.c   ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:TimerTest.c   **** 
  59:TimerTest.c   ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:TimerTest.c   ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:TimerTest.c   ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:TimerTest.c   **** 
  63:TimerTest.c   ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:TimerTest.c   ****     engineered and independently SIL3 certified version for use in safety and
  65:TimerTest.c   ****     mission critical applications that require provable dependability.
  66:TimerTest.c   **** 
  67:TimerTest.c   ****     1 tab == 4 spaces!
  68:TimerTest.c   **** */
  69:TimerTest.c   **** 
  70:TimerTest.c   **** /* High speed timer test as described in main.c. */
  71:TimerTest.c   **** #include <device.h>
  72:TimerTest.c   **** 
  73:TimerTest.c   **** /* Scheduler includes. */
  74:TimerTest.c   **** #include "FreeRTOS.h"
  75:TimerTest.c   **** 
  76:TimerTest.c   **** /* The set frequency of the interrupt.  Deviations from this are measured as
  77:TimerTest.c   **** the jitter. */
  78:TimerTest.c   **** #define timerINTERRUPT_FREQUENCY		( ( unsigned short ) 20000 )
  79:TimerTest.c   **** 
  80:TimerTest.c   **** /* The expected time between each of the timer interrupts - if the jitter was
  81:TimerTest.c   **** zero. */
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\cc53LTXW.s 			page 3


  82:TimerTest.c   **** #define timerEXPECTED_DIFFERENCE_VALUE	( configCPU_CLOCK_HZ / timerINTERRUPT_FREQUENCY )
  83:TimerTest.c   **** 
  84:TimerTest.c   **** /* The number of interrupts to pass before we start looking at the jitter. */
  85:TimerTest.c   **** #define timerSETTLE_TIME			5
  86:TimerTest.c   **** /*---------------------------------------------------------------------------*/
  87:TimerTest.c   **** 
  88:TimerTest.c   **** /*
  89:TimerTest.c   ****  * Configures the two timers used to perform the test.
  90:TimerTest.c   ****  */
  91:TimerTest.c   **** void vSetupTimerTest( void );
  92:TimerTest.c   **** 
  93:TimerTest.c   **** /* Interrupt handler in which the jitter is measured. */
  94:TimerTest.c   **** CY_ISR_PROTO(vTimer20KHzISR);
  95:TimerTest.c   **** 
  96:TimerTest.c   **** /* Stores the value of the maximum recorded jitter between interrupts. */
  97:TimerTest.c   **** volatile unsigned short usMaxJitter = 0;
  98:TimerTest.c   **** /*---------------------------------------------------------------------------*/
  99:TimerTest.c   **** 
 100:TimerTest.c   **** void vSetupTimerTest( void )
 101:TimerTest.c   **** {
  34              		.loc 1 101 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
 102:TimerTest.c   **** 	/* Install the ISR. */
 103:TimerTest.c   **** 	isrTimer_20KHz_TC_StartEx(vTimer20KHzISR);
  44              		.loc 1 103 0
  45 0004 0148     		ldr	r0, .L2
  46 0006 FFF7FEFF 		bl	isrTimer_20KHz_TC_StartEx
 104:TimerTest.c   **** }
  47              		.loc 1 104 0
  48 000a 80BD     		pop	{r7, pc}
  49              	.L3:
  50              		.align	2
  51              	.L2:
  52 000c 00000000 		.word	vTimer20KHzISR
  53              		.cfi_endproc
  54              	.LFE68:
  55              		.size	vSetupTimerTest, .-vSetupTimerTest
  56              		.section	.text.vTimer20KHzISR,"ax",%progbits
  57              		.align	2
  58              		.global	vTimer20KHzISR
  59              		.thumb
  60              		.thumb_func
  61              		.type	vTimer20KHzISR, %function
  62              	vTimer20KHzISR:
  63              	.LFB69:
 105:TimerTest.c   **** /*---------------------------------------------------------------------------*/
 106:TimerTest.c   **** 
 107:TimerTest.c   **** CY_ISR(vTimer20KHzISR)
 108:TimerTest.c   **** {
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\cc53LTXW.s 			page 4


  64              		.loc 1 108 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 8
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68 0000 80B5     		push	{r7, lr}
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 7, -8
  71              		.cfi_offset 14, -4
  72 0002 82B0     		sub	sp, sp, #8
  73              		.cfi_def_cfa_offset 16
  74 0004 00AF     		add	r7, sp, #0
  75              		.cfi_def_cfa_register 7
 109:TimerTest.c   **** static unsigned short usLastCount = 0, usSettleCount = 0, usMaxDifference = 0;
 110:TimerTest.c   **** unsigned short usThisCount, usDifference;
 111:TimerTest.c   **** 
 112:TimerTest.c   **** 	/* Capture the free running timer value as we enter the interrupt. */
 113:TimerTest.c   **** 	usThisCount = Timer_48MHz_ReadCounter();
  76              		.loc 1 113 0
  77 0006 FFF7FEFF 		bl	Timer_48MHz_ReadCounter
  78 000a 0346     		mov	r3, r0
  79 000c FB80     		strh	r3, [r7, #6]	@ movhi
 114:TimerTest.c   **** 		
 115:TimerTest.c   **** 	if( usSettleCount >= timerSETTLE_TIME )
  80              		.loc 1 115 0
  81 000e 124B     		ldr	r3, .L8
  82 0010 1B88     		ldrh	r3, [r3]
  83 0012 042B     		cmp	r3, #4
  84 0014 14D9     		bls	.L5
 116:TimerTest.c   **** 	{
 117:TimerTest.c   **** 		/* What is the difference between the timer value in this interrupt
 118:TimerTest.c   **** 		and the value from the last interrupt. Timer counts down. */
 119:TimerTest.c   **** 		usDifference = usLastCount + ~usThisCount + 1;
  85              		.loc 1 119 0
  86 0016 114B     		ldr	r3, .L8+4
  87 0018 1A88     		ldrh	r2, [r3]
  88 001a FB88     		ldrh	r3, [r7, #6]	@ movhi
  89 001c D31A     		subs	r3, r2, r3
  90 001e BB80     		strh	r3, [r7, #4]	@ movhi
 120:TimerTest.c   **** 
 121:TimerTest.c   **** 		/* Store the difference in the timer values if it is larger than the
 122:TimerTest.c   **** 		currently stored largest value.  The difference over and above the
 123:TimerTest.c   **** 		expected difference will give the 'jitter' in the processing of these
 124:TimerTest.c   **** 		interrupts. */
 125:TimerTest.c   **** 		if( usDifference > usMaxDifference )
  91              		.loc 1 125 0
  92 0020 0F4B     		ldr	r3, .L8+8
  93 0022 1B88     		ldrh	r3, [r3]
  94 0024 BA88     		ldrh	r2, [r7, #4]
  95 0026 9A42     		cmp	r2, r3
  96 0028 10D9     		bls	.L7
 126:TimerTest.c   **** 		{
 127:TimerTest.c   **** 			usMaxDifference = usDifference;
  97              		.loc 1 127 0
  98 002a 0D4A     		ldr	r2, .L8+8
  99 002c BB88     		ldrh	r3, [r7, #4]	@ movhi
 100 002e 1380     		strh	r3, [r2]	@ movhi
 128:TimerTest.c   **** 			
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\cc53LTXW.s 			page 5


 129:TimerTest.c   **** 			/* Calculate the Jitter based on the difference we expect. */
 130:TimerTest.c   **** 			usMaxJitter = usMaxDifference - timerEXPECTED_DIFFERENCE_VALUE;
 101              		.loc 1 130 0
 102 0030 0B4B     		ldr	r3, .L8+8
 103 0032 1B88     		ldrh	r3, [r3]
 104 0034 A3F51663 		sub	r3, r3, #2400
 105 0038 9AB2     		uxth	r2, r3
 106 003a 0A4B     		ldr	r3, .L8+12
 107 003c 1A80     		strh	r2, [r3]	@ movhi
 108 003e 05E0     		b	.L7
 109              	.L5:
 131:TimerTest.c   **** 		}
 132:TimerTest.c   **** 	}
 133:TimerTest.c   **** 	else
 134:TimerTest.c   **** 	{
 135:TimerTest.c   **** 		/* Don't bother storing any values for the first couple of
 136:TimerTest.c   **** 		interrupts. */
 137:TimerTest.c   **** 		usSettleCount++;
 110              		.loc 1 137 0
 111 0040 054B     		ldr	r3, .L8
 112 0042 1B88     		ldrh	r3, [r3]
 113 0044 0133     		adds	r3, r3, #1
 114 0046 9AB2     		uxth	r2, r3
 115 0048 034B     		ldr	r3, .L8
 116 004a 1A80     		strh	r2, [r3]	@ movhi
 117              	.L7:
 138:TimerTest.c   **** 	}
 139:TimerTest.c   **** 
 140:TimerTest.c   **** 	/* Remember what the timer value was this time through, so we can calculate
 141:TimerTest.c   **** 	the difference the next time through. */
 142:TimerTest.c   **** 	usLastCount = usThisCount;
 118              		.loc 1 142 0
 119 004c 034A     		ldr	r2, .L8+4
 120 004e FB88     		ldrh	r3, [r7, #6]	@ movhi
 121 0050 1380     		strh	r3, [r2]	@ movhi
 143:TimerTest.c   **** }
 122              		.loc 1 143 0
 123 0052 0837     		adds	r7, r7, #8
 124              		.cfi_def_cfa_offset 8
 125 0054 BD46     		mov	sp, r7
 126              		.cfi_def_cfa_register 13
 127              		@ sp needed
 128 0056 80BD     		pop	{r7, pc}
 129              	.L9:
 130              		.align	2
 131              	.L8:
 132 0058 02000000 		.word	usSettleCount.5660
 133 005c 04000000 		.word	usLastCount.5659
 134 0060 06000000 		.word	usMaxDifference.5661
 135 0064 00000000 		.word	usMaxJitter
 136              		.cfi_endproc
 137              	.LFE69:
 138              		.size	vTimer20KHzISR, .-vTimer20KHzISR
 139              		.bss
 140              		.align	1
 141              	usSettleCount.5660:
 142 0002 0000     		.space	2
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\cc53LTXW.s 			page 6


 143              		.align	1
 144              	usLastCount.5659:
 145 0004 0000     		.space	2
 146              		.align	1
 147              	usMaxDifference.5661:
 148 0006 0000     		.space	2
 149              		.text
 150              	.Letext0:
 151              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 152              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 153              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 154              		.section	.debug_info,"",%progbits
 155              	.Ldebug_info0:
 156 0000 56010000 		.4byte	0x156
 157 0004 0400     		.2byte	0x4
 158 0006 00000000 		.4byte	.Ldebug_abbrev0
 159 000a 04       		.byte	0x4
 160 000b 01       		.uleb128 0x1
 161 000c CF000000 		.4byte	.LASF26
 162 0010 01       		.byte	0x1
 163 0011 53000000 		.4byte	.LASF27
 164 0015 7B010000 		.4byte	.LASF28
 165 0019 00000000 		.4byte	.Ldebug_ranges0+0
 166 001d 00000000 		.4byte	0
 167 0021 00000000 		.4byte	.Ldebug_line0
 168 0025 02       		.uleb128 0x2
 169 0026 01       		.byte	0x1
 170 0027 06       		.byte	0x6
 171 0028 47000000 		.4byte	.LASF0
 172 002c 02       		.uleb128 0x2
 173 002d 01       		.byte	0x1
 174 002e 08       		.byte	0x8
 175 002f AF000000 		.4byte	.LASF1
 176 0033 02       		.uleb128 0x2
 177 0034 02       		.byte	0x2
 178 0035 05       		.byte	0x5
 179 0036 49020000 		.4byte	.LASF2
 180 003a 02       		.uleb128 0x2
 181 003b 02       		.byte	0x2
 182 003c 07       		.byte	0x7
 183 003d 0E000000 		.4byte	.LASF3
 184 0041 03       		.uleb128 0x3
 185 0042 29020000 		.4byte	.LASF9
 186 0046 02       		.byte	0x2
 187 0047 3F       		.byte	0x3f
 188 0048 4C000000 		.4byte	0x4c
 189 004c 02       		.uleb128 0x2
 190 004d 04       		.byte	0x4
 191 004e 05       		.byte	0x5
 192 004f 72010000 		.4byte	.LASF4
 193 0053 02       		.uleb128 0x2
 194 0054 04       		.byte	0x4
 195 0055 07       		.byte	0x7
 196 0056 6B000000 		.4byte	.LASF5
 197 005a 02       		.uleb128 0x2
 198 005b 08       		.byte	0x8
 199 005c 05       		.byte	0x5
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\cc53LTXW.s 			page 7


 200 005d 00000000 		.4byte	.LASF6
 201 0061 02       		.uleb128 0x2
 202 0062 08       		.byte	0x8
 203 0063 07       		.byte	0x7
 204 0064 7D000000 		.4byte	.LASF7
 205 0068 04       		.uleb128 0x4
 206 0069 04       		.byte	0x4
 207 006a 05       		.byte	0x5
 208 006b 696E7400 		.ascii	"int\000"
 209 006f 02       		.uleb128 0x2
 210 0070 04       		.byte	0x4
 211 0071 07       		.byte	0x7
 212 0072 2E000000 		.4byte	.LASF8
 213 0076 03       		.uleb128 0x3
 214 0077 53020000 		.4byte	.LASF10
 215 007b 03       		.byte	0x3
 216 007c 2C       		.byte	0x2c
 217 007d 41000000 		.4byte	0x41
 218 0081 02       		.uleb128 0x2
 219 0082 04       		.byte	0x4
 220 0083 04       		.byte	0x4
 221 0084 43020000 		.4byte	.LASF11
 222 0088 02       		.uleb128 0x2
 223 0089 08       		.byte	0x8
 224 008a 04       		.byte	0x4
 225 008b 6B010000 		.4byte	.LASF12
 226 008f 02       		.uleb128 0x2
 227 0090 01       		.byte	0x1
 228 0091 08       		.byte	0x8
 229 0092 BD000000 		.4byte	.LASF13
 230 0096 02       		.uleb128 0x2
 231 0097 04       		.byte	0x4
 232 0098 07       		.byte	0x7
 233 0099 5B020000 		.4byte	.LASF14
 234 009d 05       		.uleb128 0x5
 235 009e 19020000 		.4byte	.LASF15
 236 00a2 01       		.byte	0x1
 237 00a3 64       		.byte	0x64
 238 00a4 00000000 		.4byte	.LFB68
 239 00a8 10000000 		.4byte	.LFE68-.LFB68
 240 00ac 01       		.uleb128 0x1
 241 00ad 9C       		.byte	0x9c
 242 00ae C0000000 		.4byte	0xc0
 243 00b2 06       		.uleb128 0x6
 244 00b3 FF010000 		.4byte	.LASF22
 245 00b7 01       		.byte	0x1
 246 00b8 67       		.byte	0x67
 247 00b9 68000000 		.4byte	0x68
 248 00bd 07       		.uleb128 0x7
 249 00be 00       		.byte	0
 250 00bf 00       		.byte	0
 251 00c0 05       		.uleb128 0x5
 252 00c1 94000000 		.4byte	.LASF16
 253 00c5 01       		.byte	0x1
 254 00c6 6B       		.byte	0x6b
 255 00c7 00000000 		.4byte	.LFB69
 256 00cb 68000000 		.4byte	.LFE69-.LFB69
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\cc53LTXW.s 			page 8


 257 00cf 01       		.uleb128 0x1
 258 00d0 9C       		.byte	0x9c
 259 00d1 32010000 		.4byte	0x132
 260 00d5 08       		.uleb128 0x8
 261 00d6 3B000000 		.4byte	.LASF17
 262 00da 01       		.byte	0x1
 263 00db 6D       		.byte	0x6d
 264 00dc 3A000000 		.4byte	0x3a
 265 00e0 05       		.uleb128 0x5
 266 00e1 03       		.byte	0x3
 267 00e2 04000000 		.4byte	usLastCount.5659
 268 00e6 08       		.uleb128 0x8
 269 00e7 5D010000 		.4byte	.LASF18
 270 00eb 01       		.byte	0x1
 271 00ec 6D       		.byte	0x6d
 272 00ed 3A000000 		.4byte	0x3a
 273 00f1 05       		.uleb128 0x5
 274 00f2 03       		.byte	0x3
 275 00f3 02000000 		.4byte	usSettleCount.5660
 276 00f7 08       		.uleb128 0x8
 277 00f8 33020000 		.4byte	.LASF19
 278 00fc 01       		.byte	0x1
 279 00fd 6D       		.byte	0x6d
 280 00fe 3A000000 		.4byte	0x3a
 281 0102 05       		.uleb128 0x5
 282 0103 03       		.byte	0x3
 283 0104 06000000 		.4byte	usMaxDifference.5661
 284 0108 08       		.uleb128 0x8
 285 0109 5F000000 		.4byte	.LASF20
 286 010d 01       		.byte	0x1
 287 010e 6E       		.byte	0x6e
 288 010f 3A000000 		.4byte	0x3a
 289 0113 02       		.uleb128 0x2
 290 0114 91       		.byte	0x91
 291 0115 76       		.sleb128 -10
 292 0116 08       		.uleb128 0x8
 293 0117 C2000000 		.4byte	.LASF21
 294 011b 01       		.byte	0x1
 295 011c 6E       		.byte	0x6e
 296 011d 3A000000 		.4byte	0x3a
 297 0121 02       		.uleb128 0x2
 298 0122 91       		.byte	0x91
 299 0123 74       		.sleb128 -12
 300 0124 06       		.uleb128 0x6
 301 0125 E7010000 		.4byte	.LASF23
 302 0129 01       		.byte	0x1
 303 012a 71       		.byte	0x71
 304 012b 68000000 		.4byte	0x68
 305 012f 07       		.uleb128 0x7
 306 0130 00       		.byte	0
 307 0131 00       		.byte	0
 308 0132 09       		.uleb128 0x9
 309 0133 21000000 		.4byte	.LASF24
 310 0137 04       		.byte	0x4
 311 0138 9606     		.2byte	0x696
 312 013a 3E010000 		.4byte	0x13e
 313 013e 0A       		.uleb128 0xa
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\cc53LTXW.s 			page 9


 314 013f 76000000 		.4byte	0x76
 315 0143 0B       		.uleb128 0xb
 316 0144 A3000000 		.4byte	.LASF25
 317 0148 01       		.byte	0x1
 318 0149 61       		.byte	0x61
 319 014a 54010000 		.4byte	0x154
 320 014e 05       		.uleb128 0x5
 321 014f 03       		.byte	0x3
 322 0150 00000000 		.4byte	usMaxJitter
 323 0154 0A       		.uleb128 0xa
 324 0155 3A000000 		.4byte	0x3a
 325 0159 00       		.byte	0
 326              		.section	.debug_abbrev,"",%progbits
 327              	.Ldebug_abbrev0:
 328 0000 01       		.uleb128 0x1
 329 0001 11       		.uleb128 0x11
 330 0002 01       		.byte	0x1
 331 0003 25       		.uleb128 0x25
 332 0004 0E       		.uleb128 0xe
 333 0005 13       		.uleb128 0x13
 334 0006 0B       		.uleb128 0xb
 335 0007 03       		.uleb128 0x3
 336 0008 0E       		.uleb128 0xe
 337 0009 1B       		.uleb128 0x1b
 338 000a 0E       		.uleb128 0xe
 339 000b 55       		.uleb128 0x55
 340 000c 17       		.uleb128 0x17
 341 000d 11       		.uleb128 0x11
 342 000e 01       		.uleb128 0x1
 343 000f 10       		.uleb128 0x10
 344 0010 17       		.uleb128 0x17
 345 0011 00       		.byte	0
 346 0012 00       		.byte	0
 347 0013 02       		.uleb128 0x2
 348 0014 24       		.uleb128 0x24
 349 0015 00       		.byte	0
 350 0016 0B       		.uleb128 0xb
 351 0017 0B       		.uleb128 0xb
 352 0018 3E       		.uleb128 0x3e
 353 0019 0B       		.uleb128 0xb
 354 001a 03       		.uleb128 0x3
 355 001b 0E       		.uleb128 0xe
 356 001c 00       		.byte	0
 357 001d 00       		.byte	0
 358 001e 03       		.uleb128 0x3
 359 001f 16       		.uleb128 0x16
 360 0020 00       		.byte	0
 361 0021 03       		.uleb128 0x3
 362 0022 0E       		.uleb128 0xe
 363 0023 3A       		.uleb128 0x3a
 364 0024 0B       		.uleb128 0xb
 365 0025 3B       		.uleb128 0x3b
 366 0026 0B       		.uleb128 0xb
 367 0027 49       		.uleb128 0x49
 368 0028 13       		.uleb128 0x13
 369 0029 00       		.byte	0
 370 002a 00       		.byte	0
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\cc53LTXW.s 			page 10


 371 002b 04       		.uleb128 0x4
 372 002c 24       		.uleb128 0x24
 373 002d 00       		.byte	0
 374 002e 0B       		.uleb128 0xb
 375 002f 0B       		.uleb128 0xb
 376 0030 3E       		.uleb128 0x3e
 377 0031 0B       		.uleb128 0xb
 378 0032 03       		.uleb128 0x3
 379 0033 08       		.uleb128 0x8
 380 0034 00       		.byte	0
 381 0035 00       		.byte	0
 382 0036 05       		.uleb128 0x5
 383 0037 2E       		.uleb128 0x2e
 384 0038 01       		.byte	0x1
 385 0039 3F       		.uleb128 0x3f
 386 003a 19       		.uleb128 0x19
 387 003b 03       		.uleb128 0x3
 388 003c 0E       		.uleb128 0xe
 389 003d 3A       		.uleb128 0x3a
 390 003e 0B       		.uleb128 0xb
 391 003f 3B       		.uleb128 0x3b
 392 0040 0B       		.uleb128 0xb
 393 0041 27       		.uleb128 0x27
 394 0042 19       		.uleb128 0x19
 395 0043 11       		.uleb128 0x11
 396 0044 01       		.uleb128 0x1
 397 0045 12       		.uleb128 0x12
 398 0046 06       		.uleb128 0x6
 399 0047 40       		.uleb128 0x40
 400 0048 18       		.uleb128 0x18
 401 0049 9642     		.uleb128 0x2116
 402 004b 19       		.uleb128 0x19
 403 004c 01       		.uleb128 0x1
 404 004d 13       		.uleb128 0x13
 405 004e 00       		.byte	0
 406 004f 00       		.byte	0
 407 0050 06       		.uleb128 0x6
 408 0051 2E       		.uleb128 0x2e
 409 0052 01       		.byte	0x1
 410 0053 3F       		.uleb128 0x3f
 411 0054 19       		.uleb128 0x19
 412 0055 03       		.uleb128 0x3
 413 0056 0E       		.uleb128 0xe
 414 0057 3A       		.uleb128 0x3a
 415 0058 0B       		.uleb128 0xb
 416 0059 3B       		.uleb128 0x3b
 417 005a 0B       		.uleb128 0xb
 418 005b 49       		.uleb128 0x49
 419 005c 13       		.uleb128 0x13
 420 005d 3C       		.uleb128 0x3c
 421 005e 19       		.uleb128 0x19
 422 005f 00       		.byte	0
 423 0060 00       		.byte	0
 424 0061 07       		.uleb128 0x7
 425 0062 18       		.uleb128 0x18
 426 0063 00       		.byte	0
 427 0064 00       		.byte	0
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\cc53LTXW.s 			page 11


 428 0065 00       		.byte	0
 429 0066 08       		.uleb128 0x8
 430 0067 34       		.uleb128 0x34
 431 0068 00       		.byte	0
 432 0069 03       		.uleb128 0x3
 433 006a 0E       		.uleb128 0xe
 434 006b 3A       		.uleb128 0x3a
 435 006c 0B       		.uleb128 0xb
 436 006d 3B       		.uleb128 0x3b
 437 006e 0B       		.uleb128 0xb
 438 006f 49       		.uleb128 0x49
 439 0070 13       		.uleb128 0x13
 440 0071 02       		.uleb128 0x2
 441 0072 18       		.uleb128 0x18
 442 0073 00       		.byte	0
 443 0074 00       		.byte	0
 444 0075 09       		.uleb128 0x9
 445 0076 34       		.uleb128 0x34
 446 0077 00       		.byte	0
 447 0078 03       		.uleb128 0x3
 448 0079 0E       		.uleb128 0xe
 449 007a 3A       		.uleb128 0x3a
 450 007b 0B       		.uleb128 0xb
 451 007c 3B       		.uleb128 0x3b
 452 007d 05       		.uleb128 0x5
 453 007e 49       		.uleb128 0x49
 454 007f 13       		.uleb128 0x13
 455 0080 3F       		.uleb128 0x3f
 456 0081 19       		.uleb128 0x19
 457 0082 3C       		.uleb128 0x3c
 458 0083 19       		.uleb128 0x19
 459 0084 00       		.byte	0
 460 0085 00       		.byte	0
 461 0086 0A       		.uleb128 0xa
 462 0087 35       		.uleb128 0x35
 463 0088 00       		.byte	0
 464 0089 49       		.uleb128 0x49
 465 008a 13       		.uleb128 0x13
 466 008b 00       		.byte	0
 467 008c 00       		.byte	0
 468 008d 0B       		.uleb128 0xb
 469 008e 34       		.uleb128 0x34
 470 008f 00       		.byte	0
 471 0090 03       		.uleb128 0x3
 472 0091 0E       		.uleb128 0xe
 473 0092 3A       		.uleb128 0x3a
 474 0093 0B       		.uleb128 0xb
 475 0094 3B       		.uleb128 0x3b
 476 0095 0B       		.uleb128 0xb
 477 0096 49       		.uleb128 0x49
 478 0097 13       		.uleb128 0x13
 479 0098 3F       		.uleb128 0x3f
 480 0099 19       		.uleb128 0x19
 481 009a 02       		.uleb128 0x2
 482 009b 18       		.uleb128 0x18
 483 009c 00       		.byte	0
 484 009d 00       		.byte	0
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\cc53LTXW.s 			page 12


 485 009e 00       		.byte	0
 486              		.section	.debug_aranges,"",%progbits
 487 0000 24000000 		.4byte	0x24
 488 0004 0200     		.2byte	0x2
 489 0006 00000000 		.4byte	.Ldebug_info0
 490 000a 04       		.byte	0x4
 491 000b 00       		.byte	0
 492 000c 0000     		.2byte	0
 493 000e 0000     		.2byte	0
 494 0010 00000000 		.4byte	.LFB68
 495 0014 10000000 		.4byte	.LFE68-.LFB68
 496 0018 00000000 		.4byte	.LFB69
 497 001c 68000000 		.4byte	.LFE69-.LFB69
 498 0020 00000000 		.4byte	0
 499 0024 00000000 		.4byte	0
 500              		.section	.debug_ranges,"",%progbits
 501              	.Ldebug_ranges0:
 502 0000 00000000 		.4byte	.LFB68
 503 0004 10000000 		.4byte	.LFE68
 504 0008 00000000 		.4byte	.LFB69
 505 000c 68000000 		.4byte	.LFE69
 506 0010 00000000 		.4byte	0
 507 0014 00000000 		.4byte	0
 508              		.section	.debug_line,"",%progbits
 509              	.Ldebug_line0:
 510 0000 70010000 		.section	.debug_str,"MS",%progbits,1
 510      02003F01 
 510      00000201 
 510      FB0E0D00 
 510      01010101 
 511              	.LASF6:
 512 0000 6C6F6E67 		.ascii	"long long int\000"
 512      206C6F6E 
 512      6720696E 
 512      7400
 513              	.LASF3:
 514 000e 73686F72 		.ascii	"short unsigned int\000"
 514      7420756E 
 514      7369676E 
 514      65642069 
 514      6E7400
 515              	.LASF24:
 516 0021 49544D5F 		.ascii	"ITM_RxBuffer\000"
 516      52784275 
 516      66666572 
 516      00
 517              	.LASF8:
 518 002e 756E7369 		.ascii	"unsigned int\000"
 518      676E6564 
 518      20696E74 
 518      00
 519              	.LASF17:
 520 003b 75734C61 		.ascii	"usLastCount\000"
 520      7374436F 
 520      756E7400 
 521              	.LASF0:
 522 0047 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\cc53LTXW.s 			page 13


 522      65642063 
 522      68617200 
 523              	.LASF27:
 524 0053 54696D65 		.ascii	"TimerTest.c\000"
 524      72546573 
 524      742E6300 
 525              	.LASF20:
 526 005f 75735468 		.ascii	"usThisCount\000"
 526      6973436F 
 526      756E7400 
 527              	.LASF5:
 528 006b 6C6F6E67 		.ascii	"long unsigned int\000"
 528      20756E73 
 528      69676E65 
 528      6420696E 
 528      7400
 529              	.LASF7:
 530 007d 6C6F6E67 		.ascii	"long long unsigned int\000"
 530      206C6F6E 
 530      6720756E 
 530      7369676E 
 530      65642069 
 531              	.LASF16:
 532 0094 7654696D 		.ascii	"vTimer20KHzISR\000"
 532      65723230 
 532      4B487A49 
 532      535200
 533              	.LASF25:
 534 00a3 75734D61 		.ascii	"usMaxJitter\000"
 534      784A6974 
 534      74657200 
 535              	.LASF1:
 536 00af 756E7369 		.ascii	"unsigned char\000"
 536      676E6564 
 536      20636861 
 536      7200
 537              	.LASF13:
 538 00bd 63686172 		.ascii	"char\000"
 538      00
 539              	.LASF21:
 540 00c2 75734469 		.ascii	"usDifference\000"
 540      66666572 
 540      656E6365 
 540      00
 541              	.LASF26:
 542 00cf 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 542      4320342E 
 542      392E3320 
 542      32303135 
 542      30333033 
 543 0102 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 543      20726576 
 543      6973696F 
 543      6E203232 
 543      31323230 
 544 0135 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 544      66756E63 
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\cc53LTXW.s 			page 14


 544      74696F6E 
 544      2D736563 
 544      74696F6E 
 545              	.LASF18:
 546 015d 75735365 		.ascii	"usSettleCount\000"
 546      74746C65 
 546      436F756E 
 546      7400
 547              	.LASF12:
 548 016b 646F7562 		.ascii	"double\000"
 548      6C6500
 549              	.LASF4:
 550 0172 6C6F6E67 		.ascii	"long int\000"
 550      20696E74 
 550      00
 551              	.LASF28:
 552 017b 433A5C55 		.ascii	"C:\\Users\\NGGMLGM\\Documents\\UWE\\GDIP\\GDIP\\Fre"
 552      73657273 
 552      5C4E4747 
 552      4D4C474D 
 552      5C446F63 
 553 01a7 6552544F 		.ascii	"eRTOS\\Demo\\CORTEX_CY8C5588_PSoC_Creator_GCC\\Free"
 553      535C4465 
 553      6D6F5C43 
 553      4F525445 
 553      585F4359 
 554 01d7 52544F53 		.ascii	"RTOS_Demo.cydsn\000"
 554      5F44656D 
 554      6F2E6379 
 554      64736E00 
 555              	.LASF23:
 556 01e7 54696D65 		.ascii	"Timer_48MHz_ReadCounter\000"
 556      725F3438 
 556      4D487A5F 
 556      52656164 
 556      436F756E 
 557              	.LASF22:
 558 01ff 69737254 		.ascii	"isrTimer_20KHz_TC_StartEx\000"
 558      696D6572 
 558      5F32304B 
 558      487A5F54 
 558      435F5374 
 559              	.LASF15:
 560 0219 76536574 		.ascii	"vSetupTimerTest\000"
 560      75705469 
 560      6D657254 
 560      65737400 
 561              	.LASF9:
 562 0229 5F5F696E 		.ascii	"__int32_t\000"
 562      7433325F 
 562      7400
 563              	.LASF19:
 564 0233 75734D61 		.ascii	"usMaxDifference\000"
 564      78446966 
 564      66657265 
 564      6E636500 
 565              	.LASF11:
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\cc53LTXW.s 			page 15


 566 0243 666C6F61 		.ascii	"float\000"
 566      7400
 567              	.LASF2:
 568 0249 73686F72 		.ascii	"short int\000"
 568      7420696E 
 568      7400
 569              	.LASF10:
 570 0253 696E7433 		.ascii	"int32_t\000"
 570      325F7400 
 571              	.LASF14:
 572 025b 73697A65 		.ascii	"sizetype\000"
 572      74797065 
 572      00
 573              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
