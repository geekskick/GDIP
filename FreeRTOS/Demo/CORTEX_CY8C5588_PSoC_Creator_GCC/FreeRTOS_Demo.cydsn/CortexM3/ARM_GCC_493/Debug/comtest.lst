ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"comtest.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              		.align	2
  20              	xPort:
  21 0000 00000000 		.space	4
  22              		.align	2
  23              	uxBaseLED:
  24 0004 00000000 		.space	4
  25              		.align	2
  26              	uxRxLoops:
  27 0008 00000000 		.space	4
  28              		.section	.rodata
  29              		.align	2
  30              	.LC0:
  31 0000 434F4D54 		.ascii	"COMTx\000"
  31      7800
  32 0006 0000     		.align	2
  33              	.LC1:
  34 0008 434F4D52 		.ascii	"COMRx\000"
  34      7800
  35 000e 0000     		.section	.text.vAltStartComTestTasks,"ax",%progbits
  36              		.align	2
  37              		.global	vAltStartComTestTasks
  38              		.thumb
  39              		.thumb_func
  40              		.type	vAltStartComTestTasks, %function
  41              	vAltStartComTestTasks:
  42              	.LFB68:
  43              		.file 1 "..\\..\\Common\\Minimal\\comtest.c"
   1:..\..\Common\Minimal/comtest.c **** /*
   2:..\..\Common\Minimal/comtest.c ****     FreeRTOS V9.0.0rc2 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:..\..\Common\Minimal/comtest.c ****     All rights reserved
   4:..\..\Common\Minimal/comtest.c **** 
   5:..\..\Common\Minimal/comtest.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:..\..\Common\Minimal/comtest.c **** 
   7:..\..\Common\Minimal/comtest.c ****     This file is part of the FreeRTOS distribution.
   8:..\..\Common\Minimal/comtest.c **** 
   9:..\..\Common\Minimal/comtest.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:..\..\Common\Minimal/comtest.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:..\..\Common\Minimal/comtest.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:..\..\Common\Minimal/comtest.c **** 
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 2


  13:..\..\Common\Minimal/comtest.c ****     ***************************************************************************
  14:..\..\Common\Minimal/comtest.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:..\..\Common\Minimal/comtest.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:..\..\Common\Minimal/comtest.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:..\..\Common\Minimal/comtest.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:..\..\Common\Minimal/comtest.c ****     ***************************************************************************
  19:..\..\Common\Minimal/comtest.c **** 
  20:..\..\Common\Minimal/comtest.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:..\..\Common\Minimal/comtest.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:..\..\Common\Minimal/comtest.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:..\..\Common\Minimal/comtest.c ****     link: http://www.freertos.org/a00114.html
  24:..\..\Common\Minimal/comtest.c **** 
  25:..\..\Common\Minimal/comtest.c ****     ***************************************************************************
  26:..\..\Common\Minimal/comtest.c ****      *                                                                       *
  27:..\..\Common\Minimal/comtest.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:..\..\Common\Minimal/comtest.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:..\..\Common\Minimal/comtest.c ****      *    platform software that is more than just the market leader, it     *
  30:..\..\Common\Minimal/comtest.c ****      *    is the industry's de facto standard.                               *
  31:..\..\Common\Minimal/comtest.c ****      *                                                                       *
  32:..\..\Common\Minimal/comtest.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:..\..\Common\Minimal/comtest.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:..\..\Common\Minimal/comtest.c ****      *    tutorial book, reference manual, or both:                          *
  35:..\..\Common\Minimal/comtest.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:..\..\Common\Minimal/comtest.c ****      *                                                                       *
  37:..\..\Common\Minimal/comtest.c ****     ***************************************************************************
  38:..\..\Common\Minimal/comtest.c **** 
  39:..\..\Common\Minimal/comtest.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:..\..\Common\Minimal/comtest.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:..\..\Common\Minimal/comtest.c ****     defined configASSERT()?
  42:..\..\Common\Minimal/comtest.c **** 
  43:..\..\Common\Minimal/comtest.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:..\..\Common\Minimal/comtest.c ****     embedded software for free we request you assist our global community by
  45:..\..\Common\Minimal/comtest.c ****     participating in the support forum.
  46:..\..\Common\Minimal/comtest.c **** 
  47:..\..\Common\Minimal/comtest.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:..\..\Common\Minimal/comtest.c ****     be as productive as possible as early as possible.  Now you can receive
  49:..\..\Common\Minimal/comtest.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:..\..\Common\Minimal/comtest.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:..\..\Common\Minimal/comtest.c **** 
  52:..\..\Common\Minimal/comtest.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:..\..\Common\Minimal/comtest.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:..\..\Common\Minimal/comtest.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:..\..\Common\Minimal/comtest.c **** 
  56:..\..\Common\Minimal/comtest.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:..\..\Common\Minimal/comtest.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:..\..\Common\Minimal/comtest.c **** 
  59:..\..\Common\Minimal/comtest.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:..\..\Common\Minimal/comtest.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:..\..\Common\Minimal/comtest.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:..\..\Common\Minimal/comtest.c **** 
  63:..\..\Common\Minimal/comtest.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:..\..\Common\Minimal/comtest.c ****     engineered and independently SIL3 certified version for use in safety and
  65:..\..\Common\Minimal/comtest.c ****     mission critical applications that require provable dependability.
  66:..\..\Common\Minimal/comtest.c **** 
  67:..\..\Common\Minimal/comtest.c ****     1 tab == 4 spaces!
  68:..\..\Common\Minimal/comtest.c **** */
  69:..\..\Common\Minimal/comtest.c **** 
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 3


  70:..\..\Common\Minimal/comtest.c **** 
  71:..\..\Common\Minimal/comtest.c **** /*
  72:..\..\Common\Minimal/comtest.c ****  * This version of comtest. c is for use on systems that have limited stack
  73:..\..\Common\Minimal/comtest.c ****  * space and no display facilities.  The complete version can be found in
  74:..\..\Common\Minimal/comtest.c ****  * the Demo/Common/Full directory.
  75:..\..\Common\Minimal/comtest.c ****  *
  76:..\..\Common\Minimal/comtest.c ****  * Creates two tasks that operate on an interrupt driven serial port.  A
  77:..\..\Common\Minimal/comtest.c ****  * loopback connector should be used so that everything that is transmitted is
  78:..\..\Common\Minimal/comtest.c ****  * also received.  The serial port does not use any flow control.  On a
  79:..\..\Common\Minimal/comtest.c ****  * standard 9way 'D' connector pins two and three should be connected together.
  80:..\..\Common\Minimal/comtest.c ****  *
  81:..\..\Common\Minimal/comtest.c ****  * The first task posts a sequence of characters to the Tx queue, toggling an
  82:..\..\Common\Minimal/comtest.c ****  * LED on each successful post.  At the end of the sequence it sleeps for a
  83:..\..\Common\Minimal/comtest.c ****  * pseudo-random period before resending the same sequence.
  84:..\..\Common\Minimal/comtest.c ****  *
  85:..\..\Common\Minimal/comtest.c ****  * The UART Tx end interrupt is enabled whenever data is available in the Tx
  86:..\..\Common\Minimal/comtest.c ****  * queue.  The Tx end ISR removes a single character from the Tx queue and
  87:..\..\Common\Minimal/comtest.c ****  * passes it to the UART for transmission.
  88:..\..\Common\Minimal/comtest.c ****  *
  89:..\..\Common\Minimal/comtest.c ****  * The second task blocks on the Rx queue waiting for a character to become
  90:..\..\Common\Minimal/comtest.c ****  * available.  When the UART Rx end interrupt receives a character it places
  91:..\..\Common\Minimal/comtest.c ****  * it in the Rx queue, waking the second task.  The second task checks that the
  92:..\..\Common\Minimal/comtest.c ****  * characters removed from the Rx queue form the same sequence as those posted
  93:..\..\Common\Minimal/comtest.c ****  * to the Tx queue, and toggles an LED for each correct character.
  94:..\..\Common\Minimal/comtest.c ****  *
  95:..\..\Common\Minimal/comtest.c ****  * The receiving task is spawned with a higher priority than the transmitting
  96:..\..\Common\Minimal/comtest.c ****  * task.  The receiver will therefore wake every time a character is
  97:..\..\Common\Minimal/comtest.c ****  * transmitted so neither the Tx or Rx queue should ever hold more than a few
  98:..\..\Common\Minimal/comtest.c ****  * characters.
  99:..\..\Common\Minimal/comtest.c ****  *
 100:..\..\Common\Minimal/comtest.c ****  */
 101:..\..\Common\Minimal/comtest.c **** 
 102:..\..\Common\Minimal/comtest.c **** /* Scheduler include files. */
 103:..\..\Common\Minimal/comtest.c **** #include <stdlib.h>
 104:..\..\Common\Minimal/comtest.c **** #include "FreeRTOS.h"
 105:..\..\Common\Minimal/comtest.c **** #include "task.h"
 106:..\..\Common\Minimal/comtest.c **** 
 107:..\..\Common\Minimal/comtest.c **** /* Demo program include files. */
 108:..\..\Common\Minimal/comtest.c **** #include "serial.h"
 109:..\..\Common\Minimal/comtest.c **** #include "comtest.h"
 110:..\..\Common\Minimal/comtest.c **** #include "partest.h"
 111:..\..\Common\Minimal/comtest.c **** 
 112:..\..\Common\Minimal/comtest.c **** #define comSTACK_SIZE				configMINIMAL_STACK_SIZE
 113:..\..\Common\Minimal/comtest.c **** #define comTX_LED_OFFSET			( 0 )
 114:..\..\Common\Minimal/comtest.c **** #define comRX_LED_OFFSET			( 1 )
 115:..\..\Common\Minimal/comtest.c **** #define comTOTAL_PERMISSIBLE_ERRORS ( 2 )
 116:..\..\Common\Minimal/comtest.c **** 
 117:..\..\Common\Minimal/comtest.c **** /* The Tx task will transmit the sequence of characters at a pseudo random
 118:..\..\Common\Minimal/comtest.c **** interval.  This is the maximum and minimum block time between sends. */
 119:..\..\Common\Minimal/comtest.c **** #define comTX_MAX_BLOCK_TIME		( ( TickType_t ) 0x96 )
 120:..\..\Common\Minimal/comtest.c **** #define comTX_MIN_BLOCK_TIME		( ( TickType_t ) 0x32 )
 121:..\..\Common\Minimal/comtest.c **** #define comOFFSET_TIME				( ( TickType_t ) 3 )
 122:..\..\Common\Minimal/comtest.c **** 
 123:..\..\Common\Minimal/comtest.c **** /* We should find that each character can be queued for Tx immediately and we
 124:..\..\Common\Minimal/comtest.c **** don't have to block to send. */
 125:..\..\Common\Minimal/comtest.c **** #define comNO_BLOCK					( ( TickType_t ) 0 )
 126:..\..\Common\Minimal/comtest.c **** 
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 4


 127:..\..\Common\Minimal/comtest.c **** /* The Rx task will block on the Rx queue for a long period. */
 128:..\..\Common\Minimal/comtest.c **** #define comRX_BLOCK_TIME			( ( TickType_t ) 0xffff )
 129:..\..\Common\Minimal/comtest.c **** 
 130:..\..\Common\Minimal/comtest.c **** /* The sequence transmitted is from comFIRST_BYTE to and including comLAST_BYTE. */
 131:..\..\Common\Minimal/comtest.c **** #define comFIRST_BYTE				( 'A' )
 132:..\..\Common\Minimal/comtest.c **** #define comLAST_BYTE				( 'X' )
 133:..\..\Common\Minimal/comtest.c **** 
 134:..\..\Common\Minimal/comtest.c **** #define comBUFFER_LEN				( ( UBaseType_t ) ( comLAST_BYTE - comFIRST_BYTE ) + ( UBaseType_t ) 1 )
 135:..\..\Common\Minimal/comtest.c **** #define comINITIAL_RX_COUNT_VALUE	( 0 )
 136:..\..\Common\Minimal/comtest.c **** 
 137:..\..\Common\Minimal/comtest.c **** /* Handle to the com port used by both tasks. */
 138:..\..\Common\Minimal/comtest.c **** static xComPortHandle xPort = NULL;
 139:..\..\Common\Minimal/comtest.c **** 
 140:..\..\Common\Minimal/comtest.c **** /* The transmit task as described at the top of the file. */
 141:..\..\Common\Minimal/comtest.c **** static portTASK_FUNCTION_PROTO( vComTxTask, pvParameters );
 142:..\..\Common\Minimal/comtest.c **** 
 143:..\..\Common\Minimal/comtest.c **** /* The receive task as described at the top of the file. */
 144:..\..\Common\Minimal/comtest.c **** static portTASK_FUNCTION_PROTO( vComRxTask, pvParameters );
 145:..\..\Common\Minimal/comtest.c **** 
 146:..\..\Common\Minimal/comtest.c **** /* The LED that should be toggled by the Rx and Tx tasks.  The Rx task will
 147:..\..\Common\Minimal/comtest.c **** toggle LED ( uxBaseLED + comRX_LED_OFFSET).  The Tx task will toggle LED
 148:..\..\Common\Minimal/comtest.c **** ( uxBaseLED + comTX_LED_OFFSET ). */
 149:..\..\Common\Minimal/comtest.c **** static UBaseType_t uxBaseLED = 0;
 150:..\..\Common\Minimal/comtest.c **** 
 151:..\..\Common\Minimal/comtest.c **** /* Check variable used to ensure no error have occurred.  The Rx task will
 152:..\..\Common\Minimal/comtest.c **** increment this variable after every successfully received sequence.  If at any
 153:..\..\Common\Minimal/comtest.c **** time the sequence is incorrect the the variable will stop being incremented. */
 154:..\..\Common\Minimal/comtest.c **** static volatile UBaseType_t uxRxLoops = comINITIAL_RX_COUNT_VALUE;
 155:..\..\Common\Minimal/comtest.c **** 
 156:..\..\Common\Minimal/comtest.c **** /*-----------------------------------------------------------*/
 157:..\..\Common\Minimal/comtest.c **** 
 158:..\..\Common\Minimal/comtest.c **** void vAltStartComTestTasks( UBaseType_t uxPriority, uint32_t ulBaudRate, UBaseType_t uxLED )
 159:..\..\Common\Minimal/comtest.c **** {
  44              		.loc 1 159 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 16
  47              		@ frame_needed = 1, uses_anonymous_args = 0
  48 0000 80B5     		push	{r7, lr}
  49              		.cfi_def_cfa_offset 8
  50              		.cfi_offset 7, -8
  51              		.cfi_offset 14, -4
  52 0002 86B0     		sub	sp, sp, #24
  53              		.cfi_def_cfa_offset 32
  54 0004 02AF     		add	r7, sp, #8
  55              		.cfi_def_cfa 7, 24
  56 0006 F860     		str	r0, [r7, #12]
  57 0008 B960     		str	r1, [r7, #8]
  58 000a 7A60     		str	r2, [r7, #4]
 160:..\..\Common\Minimal/comtest.c **** 	/* Initialise the com port then spawn the Rx and Tx tasks. */
 161:..\..\Common\Minimal/comtest.c **** 	uxBaseLED = uxLED;
  59              		.loc 1 161 0
  60 000c 0F4A     		ldr	r2, .L2
  61 000e 7B68     		ldr	r3, [r7, #4]
  62 0010 1360     		str	r3, [r2]
 162:..\..\Common\Minimal/comtest.c **** 	xSerialPortInitMinimal( ulBaudRate, comBUFFER_LEN );
  63              		.loc 1 162 0
  64 0012 B868     		ldr	r0, [r7, #8]
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 5


  65 0014 1821     		movs	r1, #24
  66 0016 FFF7FEFF 		bl	xSerialPortInitMinimal
 163:..\..\Common\Minimal/comtest.c **** 
 164:..\..\Common\Minimal/comtest.c **** 	/* The Tx task is spawned with a lower priority than the Rx task. */
 165:..\..\Common\Minimal/comtest.c **** 	xTaskCreate( vComTxTask, "COMTx", comSTACK_SIZE, NULL, uxPriority - 1, ( TaskHandle_t * ) NULL );
  67              		.loc 1 165 0
  68 001a FB68     		ldr	r3, [r7, #12]
  69 001c 013B     		subs	r3, r3, #1
  70 001e 0093     		str	r3, [sp]
  71 0020 0023     		movs	r3, #0
  72 0022 0193     		str	r3, [sp, #4]
  73 0024 0A48     		ldr	r0, .L2+4
  74 0026 0B49     		ldr	r1, .L2+8
  75 0028 6422     		movs	r2, #100
  76 002a 0023     		movs	r3, #0
  77 002c FFF7FEFF 		bl	xTaskCreate
 166:..\..\Common\Minimal/comtest.c **** 	xTaskCreate( vComRxTask, "COMRx", comSTACK_SIZE, NULL, uxPriority, ( TaskHandle_t * ) NULL );
  78              		.loc 1 166 0
  79 0030 FB68     		ldr	r3, [r7, #12]
  80 0032 0093     		str	r3, [sp]
  81 0034 0023     		movs	r3, #0
  82 0036 0193     		str	r3, [sp, #4]
  83 0038 0748     		ldr	r0, .L2+12
  84 003a 0849     		ldr	r1, .L2+16
  85 003c 6422     		movs	r2, #100
  86 003e 0023     		movs	r3, #0
  87 0040 FFF7FEFF 		bl	xTaskCreate
 167:..\..\Common\Minimal/comtest.c **** }
  88              		.loc 1 167 0
  89 0044 1037     		adds	r7, r7, #16
  90              		.cfi_def_cfa_offset 8
  91 0046 BD46     		mov	sp, r7
  92              		.cfi_def_cfa_register 13
  93              		@ sp needed
  94 0048 80BD     		pop	{r7, pc}
  95              	.L3:
  96 004a 00BF     		.align	2
  97              	.L2:
  98 004c 04000000 		.word	uxBaseLED
  99 0050 00000000 		.word	vComTxTask
 100 0054 00000000 		.word	.LC0
 101 0058 00000000 		.word	vComRxTask
 102 005c 08000000 		.word	.LC1
 103              		.cfi_endproc
 104              	.LFE68:
 105              		.size	vAltStartComTestTasks, .-vAltStartComTestTasks
 106              		.section	.text.vComTxTask,"ax",%progbits
 107              		.align	2
 108              		.thumb
 109              		.thumb_func
 110              		.type	vComTxTask, %function
 111              	vComTxTask:
 112              	.LFB69:
 168:..\..\Common\Minimal/comtest.c **** /*-----------------------------------------------------------*/
 169:..\..\Common\Minimal/comtest.c **** 
 170:..\..\Common\Minimal/comtest.c **** static portTASK_FUNCTION( vComTxTask, pvParameters )
 171:..\..\Common\Minimal/comtest.c **** {
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 6


 113              		.loc 1 171 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 16
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117 0000 80B5     		push	{r7, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 7, -8
 120              		.cfi_offset 14, -4
 121 0002 84B0     		sub	sp, sp, #16
 122              		.cfi_def_cfa_offset 24
 123 0004 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
 125 0006 7860     		str	r0, [r7, #4]
 126              	.L8:
 172:..\..\Common\Minimal/comtest.c **** char cByteToSend;
 173:..\..\Common\Minimal/comtest.c **** TickType_t xTimeToWait;
 174:..\..\Common\Minimal/comtest.c **** 
 175:..\..\Common\Minimal/comtest.c **** 	/* Just to stop compiler warnings. */
 176:..\..\Common\Minimal/comtest.c **** 	( void ) pvParameters;
 177:..\..\Common\Minimal/comtest.c **** 
 178:..\..\Common\Minimal/comtest.c **** 	for( ;; )
 179:..\..\Common\Minimal/comtest.c **** 	{
 180:..\..\Common\Minimal/comtest.c **** 		/* Simply transmit a sequence of characters from comFIRST_BYTE to
 181:..\..\Common\Minimal/comtest.c **** 		comLAST_BYTE. */
 182:..\..\Common\Minimal/comtest.c **** 		for( cByteToSend = comFIRST_BYTE; cByteToSend <= comLAST_BYTE; cByteToSend++ )
 127              		.loc 1 182 0
 128 0008 4123     		movs	r3, #65
 129 000a FB73     		strb	r3, [r7, #15]
 130 000c 0BE0     		b	.L5
 131              	.L6:
 183:..\..\Common\Minimal/comtest.c **** 		{
 184:..\..\Common\Minimal/comtest.c **** 			xSerialPutChar( xPort, cByteToSend, comNO_BLOCK );
 132              		.loc 1 184 0 discriminator 3
 133 000e 134B     		ldr	r3, .L9
 134 0010 1A68     		ldr	r2, [r3]
 135 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 136 0014 5BB2     		sxtb	r3, r3
 137 0016 1046     		mov	r0, r2
 138 0018 1946     		mov	r1, r3
 139 001a 0022     		movs	r2, #0
 140 001c FFF7FEFF 		bl	xSerialPutChar
 182:..\..\Common\Minimal/comtest.c **** 		{
 141              		.loc 1 182 0 discriminator 3
 142 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 143 0022 0133     		adds	r3, r3, #1
 144 0024 FB73     		strb	r3, [r7, #15]
 145              	.L5:
 182:..\..\Common\Minimal/comtest.c **** 		{
 146              		.loc 1 182 0 is_stmt 0 discriminator 1
 147 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 148 0028 582B     		cmp	r3, #88
 149 002a F0D9     		bls	.L6
 185:..\..\Common\Minimal/comtest.c **** 		}
 186:..\..\Common\Minimal/comtest.c **** 
 187:..\..\Common\Minimal/comtest.c **** 		/* We have posted all the characters in the string - wait before
 188:..\..\Common\Minimal/comtest.c **** 		re-sending.  Wait a pseudo-random time as this will provide a better
 189:..\..\Common\Minimal/comtest.c **** 		test. */
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 7


 190:..\..\Common\Minimal/comtest.c **** 		xTimeToWait = xTaskGetTickCount() + comOFFSET_TIME;
 150              		.loc 1 190 0 is_stmt 1
 151 002c FFF7FEFF 		bl	xTaskGetTickCount
 152 0030 0346     		mov	r3, r0
 153 0032 0333     		adds	r3, r3, #3
 154 0034 BB60     		str	r3, [r7, #8]
 191:..\..\Common\Minimal/comtest.c **** 
 192:..\..\Common\Minimal/comtest.c **** 		/* Make sure we don't wait too long... */
 193:..\..\Common\Minimal/comtest.c **** 		xTimeToWait %= comTX_MAX_BLOCK_TIME;
 155              		.loc 1 193 0
 156 0036 BB68     		ldr	r3, [r7, #8]
 157 0038 094A     		ldr	r2, .L9+4
 158 003a A2FB0312 		umull	r1, r2, r2, r3
 159 003e 1209     		lsrs	r2, r2, #4
 160 0040 9621     		movs	r1, #150
 161 0042 01FB02F2 		mul	r2, r1, r2
 162 0046 9B1A     		subs	r3, r3, r2
 163 0048 BB60     		str	r3, [r7, #8]
 194:..\..\Common\Minimal/comtest.c **** 
 195:..\..\Common\Minimal/comtest.c **** 		/* ...but we do want to wait. */
 196:..\..\Common\Minimal/comtest.c **** 		if( xTimeToWait < comTX_MIN_BLOCK_TIME )
 164              		.loc 1 196 0
 165 004a BB68     		ldr	r3, [r7, #8]
 166 004c 312B     		cmp	r3, #49
 167 004e 01D8     		bhi	.L7
 197:..\..\Common\Minimal/comtest.c **** 		{
 198:..\..\Common\Minimal/comtest.c **** 			xTimeToWait = comTX_MIN_BLOCK_TIME;
 168              		.loc 1 198 0
 169 0050 3223     		movs	r3, #50
 170 0052 BB60     		str	r3, [r7, #8]
 171              	.L7:
 199:..\..\Common\Minimal/comtest.c **** 		}
 200:..\..\Common\Minimal/comtest.c **** 
 201:..\..\Common\Minimal/comtest.c **** 		vTaskDelay( xTimeToWait );
 172              		.loc 1 201 0
 173 0054 B868     		ldr	r0, [r7, #8]
 174 0056 FFF7FEFF 		bl	vTaskDelay
 202:..\..\Common\Minimal/comtest.c **** 	}
 175              		.loc 1 202 0
 176 005a D5E7     		b	.L8
 177              	.L10:
 178              		.align	2
 179              	.L9:
 180 005c 00000000 		.word	xPort
 181 0060 B5814E1B 		.word	458129845
 182              		.cfi_endproc
 183              	.LFE69:
 184              		.size	vComTxTask, .-vComTxTask
 185              		.section	.text.vComRxTask,"ax",%progbits
 186              		.align	2
 187              		.thumb
 188              		.thumb_func
 189              		.type	vComRxTask, %function
 190              	vComRxTask:
 191              	.LFB70:
 203:..\..\Common\Minimal/comtest.c **** } /*lint !e715 !e818 pvParameters is required for a task function even if it is not referenced. */
 204:..\..\Common\Minimal/comtest.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 8


 205:..\..\Common\Minimal/comtest.c **** 
 206:..\..\Common\Minimal/comtest.c **** static portTASK_FUNCTION( vComRxTask, pvParameters )
 207:..\..\Common\Minimal/comtest.c **** {
 192              		.loc 1 207 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 24
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196 0000 80B5     		push	{r7, lr}
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 7, -8
 199              		.cfi_offset 14, -4
 200 0002 86B0     		sub	sp, sp, #24
 201              		.cfi_def_cfa_offset 32
 202 0004 00AF     		add	r7, sp, #0
 203              		.cfi_def_cfa_register 7
 204 0006 7860     		str	r0, [r7, #4]
 208:..\..\Common\Minimal/comtest.c **** signed char cExpectedByte, cByteRxed;
 209:..\..\Common\Minimal/comtest.c **** BaseType_t xResyncRequired = pdFALSE, xErrorOccurred = pdFALSE;
 205              		.loc 1 209 0
 206 0008 0023     		movs	r3, #0
 207 000a 7B61     		str	r3, [r7, #20]
 208 000c 0023     		movs	r3, #0
 209 000e 3B61     		str	r3, [r7, #16]
 210              	.L12:
 210:..\..\Common\Minimal/comtest.c **** 
 211:..\..\Common\Minimal/comtest.c **** 	/* Just to stop compiler warnings. */
 212:..\..\Common\Minimal/comtest.c **** 	( void ) pvParameters;
 213:..\..\Common\Minimal/comtest.c **** 
 214:..\..\Common\Minimal/comtest.c **** 	for( ;; )
 215:..\..\Common\Minimal/comtest.c **** 	{
 216:..\..\Common\Minimal/comtest.c **** 		/* Block on the queue that contains received bytes until a byte is
 217:..\..\Common\Minimal/comtest.c **** 		available. */
 218:..\..\Common\Minimal/comtest.c **** 		xSerialGetChar( xPort, &cByteRxed, comRX_BLOCK_TIME ); 
 211              		.loc 1 218 0 discriminator 1
 212 0010 054B     		ldr	r3, .L13
 213 0012 1A68     		ldr	r2, [r3]
 214 0014 07F10F03 		add	r3, r7, #15
 215 0018 1046     		mov	r0, r2
 216 001a 1946     		mov	r1, r3
 217 001c 4FF6FF72 		movw	r2, #65535
 218 0020 FFF7FEFF 		bl	xSerialGetChar
 219:..\..\Common\Minimal/comtest.c ****         
 220:..\..\Common\Minimal/comtest.c ****         /* Now send to the servoqueue or task etc but this isn't implemeted yet */
 221:..\..\Common\Minimal/comtest.c **** 	}
 219              		.loc 1 221 0 discriminator 1
 220 0024 F4E7     		b	.L12
 221              	.L14:
 222 0026 00BF     		.align	2
 223              	.L13:
 224 0028 00000000 		.word	xPort
 225              		.cfi_endproc
 226              	.LFE70:
 227              		.size	vComRxTask, .-vComRxTask
 228              		.section	.text.xAreComTestTasksStillRunning,"ax",%progbits
 229              		.align	2
 230              		.global	xAreComTestTasksStillRunning
 231              		.thumb
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 9


 232              		.thumb_func
 233              		.type	xAreComTestTasksStillRunning, %function
 234              	xAreComTestTasksStillRunning:
 235              	.LFB71:
 222:..\..\Common\Minimal/comtest.c **** } /*lint !e715 !e818 pvParameters is required for a task function even if it is not referenced. */
 223:..\..\Common\Minimal/comtest.c **** /*-----------------------------------------------------------*/
 224:..\..\Common\Minimal/comtest.c **** 
 225:..\..\Common\Minimal/comtest.c **** BaseType_t xAreComTestTasksStillRunning( void )
 226:..\..\Common\Minimal/comtest.c **** {
 236              		.loc 1 226 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 8
 239              		@ frame_needed = 1, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 241 0000 80B4     		push	{r7}
 242              		.cfi_def_cfa_offset 4
 243              		.cfi_offset 7, -4
 244 0002 83B0     		sub	sp, sp, #12
 245              		.cfi_def_cfa_offset 16
 246 0004 00AF     		add	r7, sp, #0
 247              		.cfi_def_cfa_register 7
 227:..\..\Common\Minimal/comtest.c **** BaseType_t xReturn;
 228:..\..\Common\Minimal/comtest.c **** 
 229:..\..\Common\Minimal/comtest.c **** 	/* If the count of successful reception loops has not changed than at
 230:..\..\Common\Minimal/comtest.c **** 	some time an error occurred (i.e. a character was received out of sequence)
 231:..\..\Common\Minimal/comtest.c **** 	and we will return false. */
 232:..\..\Common\Minimal/comtest.c **** 	if( uxRxLoops == comINITIAL_RX_COUNT_VALUE )
 248              		.loc 1 232 0
 249 0006 094B     		ldr	r3, .L19
 250 0008 1B68     		ldr	r3, [r3]
 251 000a 002B     		cmp	r3, #0
 252 000c 02D1     		bne	.L16
 233:..\..\Common\Minimal/comtest.c **** 	{
 234:..\..\Common\Minimal/comtest.c **** 		xReturn = pdFALSE;
 253              		.loc 1 234 0
 254 000e 0023     		movs	r3, #0
 255 0010 7B60     		str	r3, [r7, #4]
 256 0012 01E0     		b	.L17
 257              	.L16:
 235:..\..\Common\Minimal/comtest.c **** 	}
 236:..\..\Common\Minimal/comtest.c **** 	else
 237:..\..\Common\Minimal/comtest.c **** 	{
 238:..\..\Common\Minimal/comtest.c **** 		xReturn = pdTRUE;
 258              		.loc 1 238 0
 259 0014 0123     		movs	r3, #1
 260 0016 7B60     		str	r3, [r7, #4]
 261              	.L17:
 239:..\..\Common\Minimal/comtest.c **** 	}
 240:..\..\Common\Minimal/comtest.c **** 
 241:..\..\Common\Minimal/comtest.c **** 	/* Reset the count of successful Rx loops.  When this function is called
 242:..\..\Common\Minimal/comtest.c **** 	again we expect this to have been incremented. */
 243:..\..\Common\Minimal/comtest.c **** 	uxRxLoops = comINITIAL_RX_COUNT_VALUE;
 262              		.loc 1 243 0
 263 0018 044B     		ldr	r3, .L19
 264 001a 0022     		movs	r2, #0
 265 001c 1A60     		str	r2, [r3]
 244:..\..\Common\Minimal/comtest.c **** 
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 10


 245:..\..\Common\Minimal/comtest.c **** 	return xReturn;
 266              		.loc 1 245 0
 267 001e 7B68     		ldr	r3, [r7, #4]
 246:..\..\Common\Minimal/comtest.c **** }
 268              		.loc 1 246 0
 269 0020 1846     		mov	r0, r3
 270 0022 0C37     		adds	r7, r7, #12
 271              		.cfi_def_cfa_offset 4
 272 0024 BD46     		mov	sp, r7
 273              		.cfi_def_cfa_register 13
 274              		@ sp needed
 275 0026 5DF8047B 		ldr	r7, [sp], #4
 276              		.cfi_restore 7
 277              		.cfi_def_cfa_offset 0
 278 002a 7047     		bx	lr
 279              	.L20:
 280              		.align	2
 281              	.L19:
 282 002c 08000000 		.word	uxRxLoops
 283              		.cfi_endproc
 284              	.LFE71:
 285              		.size	xAreComTestTasksStillRunning, .-xAreComTestTasksStillRunning
 286              		.text
 287              	.Letext0:
 288              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 289              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 290              		.file 4 "../../../Source/portable/GCC/ARM_CM3/portmacro.h"
 291              		.file 5 "../../../Source/include/task.h"
 292              		.file 6 "../../Common/include/serial.h"
 293              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 294              		.section	.debug_info,"",%progbits
 295              	.Ldebug_info0:
 296 0000 33020000 		.4byte	0x233
 297 0004 0400     		.2byte	0x4
 298 0006 00000000 		.4byte	.Ldebug_abbrev0
 299 000a 04       		.byte	0x4
 300 000b 01       		.uleb128 0x1
 301 000c 2A000000 		.4byte	.LASF37
 302 0010 01       		.byte	0x1
 303 0011 6F010000 		.4byte	.LASF38
 304 0015 B4010000 		.4byte	.LASF39
 305 0019 00000000 		.4byte	.Ldebug_ranges0+0
 306 001d 00000000 		.4byte	0
 307 0021 00000000 		.4byte	.Ldebug_line0
 308 0025 02       		.uleb128 0x2
 309 0026 04       		.byte	0x4
 310 0027 07       		.byte	0x7
 311 0028 A7010000 		.4byte	.LASF0
 312 002c 03       		.uleb128 0x3
 313 002d 04       		.byte	0x4
 314 002e 05       		.byte	0x5
 315 002f 696E7400 		.ascii	"int\000"
 316 0033 02       		.uleb128 0x2
 317 0034 01       		.byte	0x1
 318 0035 06       		.byte	0x6
 319 0036 E9020000 		.4byte	.LASF1
 320 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 11


 321 003b 01       		.byte	0x1
 322 003c 08       		.byte	0x8
 323 003d D6000000 		.4byte	.LASF2
 324 0041 02       		.uleb128 0x2
 325 0042 02       		.byte	0x2
 326 0043 05       		.byte	0x5
 327 0044 AA020000 		.4byte	.LASF3
 328 0048 02       		.uleb128 0x2
 329 0049 02       		.byte	0x2
 330 004a 07       		.byte	0x7
 331 004b 00010000 		.4byte	.LASF4
 332 004f 04       		.uleb128 0x4
 333 0050 11000000 		.4byte	.LASF6
 334 0054 02       		.byte	0x2
 335 0055 3F       		.byte	0x3f
 336 0056 5A000000 		.4byte	0x5a
 337 005a 02       		.uleb128 0x2
 338 005b 04       		.byte	0x4
 339 005c 05       		.byte	0x5
 340 005d D5020000 		.4byte	.LASF5
 341 0061 04       		.uleb128 0x4
 342 0062 4E010000 		.4byte	.LASF7
 343 0066 02       		.byte	0x2
 344 0067 41       		.byte	0x41
 345 0068 6C000000 		.4byte	0x6c
 346 006c 02       		.uleb128 0x2
 347 006d 04       		.byte	0x4
 348 006e 07       		.byte	0x7
 349 006f EE000000 		.4byte	.LASF8
 350 0073 02       		.uleb128 0x2
 351 0074 08       		.byte	0x8
 352 0075 05       		.byte	0x5
 353 0076 80020000 		.4byte	.LASF9
 354 007a 02       		.uleb128 0x2
 355 007b 08       		.byte	0x8
 356 007c 07       		.byte	0x7
 357 007d 20020000 		.4byte	.LASF10
 358 0081 02       		.uleb128 0x2
 359 0082 04       		.byte	0x4
 360 0083 07       		.byte	0x7
 361 0084 77020000 		.4byte	.LASF11
 362 0088 05       		.uleb128 0x5
 363 0089 04       		.byte	0x4
 364 008a 02       		.uleb128 0x2
 365 008b 01       		.byte	0x1
 366 008c 08       		.byte	0x8
 367 008d 8E020000 		.4byte	.LASF12
 368 0091 04       		.uleb128 0x4
 369 0092 6F020000 		.4byte	.LASF13
 370 0096 03       		.byte	0x3
 371 0097 2C       		.byte	0x2c
 372 0098 4F000000 		.4byte	0x4f
 373 009c 04       		.uleb128 0x4
 374 009d CC020000 		.4byte	.LASF14
 375 00a1 03       		.byte	0x3
 376 00a2 2D       		.byte	0x2d
 377 00a3 61000000 		.4byte	0x61
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 12


 378 00a7 02       		.uleb128 0x2
 379 00a8 04       		.byte	0x4
 380 00a9 04       		.byte	0x4
 381 00aa C2000000 		.4byte	.LASF15
 382 00ae 02       		.uleb128 0x2
 383 00af 08       		.byte	0x8
 384 00b0 04       		.byte	0x4
 385 00b1 30010000 		.4byte	.LASF16
 386 00b5 04       		.uleb128 0x4
 387 00b6 01030000 		.4byte	.LASF17
 388 00ba 04       		.byte	0x4
 389 00bb 62       		.byte	0x62
 390 00bc 5A000000 		.4byte	0x5a
 391 00c0 04       		.uleb128 0x4
 392 00c1 F5020000 		.4byte	.LASF18
 393 00c5 04       		.byte	0x4
 394 00c6 63       		.byte	0x63
 395 00c7 6C000000 		.4byte	0x6c
 396 00cb 04       		.uleb128 0x4
 397 00cc 00000000 		.4byte	.LASF19
 398 00d0 04       		.byte	0x4
 399 00d1 69       		.byte	0x69
 400 00d2 9C000000 		.4byte	0x9c
 401 00d6 04       		.uleb128 0x4
 402 00d7 BF020000 		.4byte	.LASF20
 403 00db 05       		.byte	0x5
 404 00dc 67       		.byte	0x67
 405 00dd 88000000 		.4byte	0x88
 406 00e1 04       		.uleb128 0x4
 407 00e2 1B000000 		.4byte	.LASF21
 408 00e6 06       		.byte	0x6
 409 00e7 49       		.byte	0x49
 410 00e8 88000000 		.4byte	0x88
 411 00ec 06       		.uleb128 0x6
 412 00ed 59010000 		.4byte	.LASF40
 413 00f1 01       		.byte	0x1
 414 00f2 9E       		.byte	0x9e
 415 00f3 00000000 		.4byte	.LFB68
 416 00f7 60000000 		.4byte	.LFE68-.LFB68
 417 00fb 01       		.uleb128 0x1
 418 00fc 9C       		.byte	0x9c
 419 00fd 2C010000 		.4byte	0x12c
 420 0101 07       		.uleb128 0x7
 421 0102 9C010000 		.4byte	.LASF22
 422 0106 01       		.byte	0x1
 423 0107 9E       		.byte	0x9e
 424 0108 C0000000 		.4byte	0xc0
 425 010c 02       		.uleb128 0x2
 426 010d 91       		.byte	0x91
 427 010e 74       		.sleb128 -12
 428 010f 07       		.uleb128 0x7
 429 0110 B4020000 		.4byte	.LASF23
 430 0114 01       		.byte	0x1
 431 0115 9E       		.byte	0x9e
 432 0116 9C000000 		.4byte	0x9c
 433 011a 02       		.uleb128 0x2
 434 011b 91       		.byte	0x91
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 13


 435 011c 70       		.sleb128 -16
 436 011d 07       		.uleb128 0x7
 437 011e 0B000000 		.4byte	.LASF24
 438 0122 01       		.byte	0x1
 439 0123 9E       		.byte	0x9e
 440 0124 C0000000 		.4byte	0xc0
 441 0128 02       		.uleb128 0x2
 442 0129 91       		.byte	0x91
 443 012a 6C       		.sleb128 -20
 444 012b 00       		.byte	0
 445 012c 08       		.uleb128 0x8
 446 012d 37010000 		.4byte	.LASF28
 447 0131 01       		.byte	0x1
 448 0132 AA       		.byte	0xaa
 449 0133 00000000 		.4byte	.LFB69
 450 0137 64000000 		.4byte	.LFE69-.LFB69
 451 013b 01       		.uleb128 0x1
 452 013c 9C       		.byte	0x9c
 453 013d 6C010000 		.4byte	0x16c
 454 0141 07       		.uleb128 0x7
 455 0142 93020000 		.4byte	.LASF25
 456 0146 01       		.byte	0x1
 457 0147 AA       		.byte	0xaa
 458 0148 88000000 		.4byte	0x88
 459 014c 02       		.uleb128 0x2
 460 014d 91       		.byte	0x91
 461 014e 6C       		.sleb128 -20
 462 014f 09       		.uleb128 0x9
 463 0150 37020000 		.4byte	.LASF26
 464 0154 01       		.byte	0x1
 465 0155 AC       		.byte	0xac
 466 0156 8A000000 		.4byte	0x8a
 467 015a 02       		.uleb128 0x2
 468 015b 91       		.byte	0x91
 469 015c 77       		.sleb128 -9
 470 015d 09       		.uleb128 0x9
 471 015e 42010000 		.4byte	.LASF27
 472 0162 01       		.byte	0x1
 473 0163 AD       		.byte	0xad
 474 0164 CB000000 		.4byte	0xcb
 475 0168 02       		.uleb128 0x2
 476 0169 91       		.byte	0x91
 477 016a 70       		.sleb128 -16
 478 016b 00       		.byte	0
 479 016c 08       		.uleb128 0x8
 480 016d DE020000 		.4byte	.LASF29
 481 0171 01       		.byte	0x1
 482 0172 CE       		.byte	0xce
 483 0173 00000000 		.4byte	.LFB70
 484 0177 2C000000 		.4byte	.LFE70-.LFB70
 485 017b 01       		.uleb128 0x1
 486 017c 9C       		.byte	0x9c
 487 017d C5010000 		.4byte	0x1c5
 488 0181 07       		.uleb128 0x7
 489 0182 93020000 		.4byte	.LASF25
 490 0186 01       		.byte	0x1
 491 0187 CE       		.byte	0xce
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 14


 492 0188 88000000 		.4byte	0x88
 493 018c 02       		.uleb128 0x2
 494 018d 91       		.byte	0x91
 495 018e 64       		.sleb128 -28
 496 018f 0A       		.uleb128 0xa
 497 0190 C8000000 		.4byte	.LASF41
 498 0194 01       		.byte	0x1
 499 0195 D0       		.byte	0xd0
 500 0196 33000000 		.4byte	0x33
 501 019a 09       		.uleb128 0x9
 502 019b E4000000 		.4byte	.LASF30
 503 019f 01       		.byte	0x1
 504 01a0 D0       		.byte	0xd0
 505 01a1 33000000 		.4byte	0x33
 506 01a5 02       		.uleb128 0x2
 507 01a6 91       		.byte	0x91
 508 01a7 6F       		.sleb128 -17
 509 01a8 09       		.uleb128 0x9
 510 01a9 20010000 		.4byte	.LASF31
 511 01ad 01       		.byte	0x1
 512 01ae D1       		.byte	0xd1
 513 01af B5000000 		.4byte	0xb5
 514 01b3 02       		.uleb128 0x2
 515 01b4 91       		.byte	0x91
 516 01b5 74       		.sleb128 -12
 517 01b6 09       		.uleb128 0x9
 518 01b7 43020000 		.4byte	.LASF32
 519 01bb 01       		.byte	0x1
 520 01bc D1       		.byte	0xd1
 521 01bd B5000000 		.4byte	0xb5
 522 01c1 02       		.uleb128 0x2
 523 01c2 91       		.byte	0x91
 524 01c3 70       		.sleb128 -16
 525 01c4 00       		.byte	0
 526 01c5 0B       		.uleb128 0xb
 527 01c6 52020000 		.4byte	.LASF42
 528 01ca 01       		.byte	0x1
 529 01cb E1       		.byte	0xe1
 530 01cc B5000000 		.4byte	0xb5
 531 01d0 00000000 		.4byte	.LFB71
 532 01d4 30000000 		.4byte	.LFE71-.LFB71
 533 01d8 01       		.uleb128 0x1
 534 01d9 9C       		.byte	0x9c
 535 01da ED010000 		.4byte	0x1ed
 536 01de 09       		.uleb128 0x9
 537 01df 8E010000 		.4byte	.LASF33
 538 01e3 01       		.byte	0x1
 539 01e4 E3       		.byte	0xe3
 540 01e5 B5000000 		.4byte	0xb5
 541 01e9 02       		.uleb128 0x2
 542 01ea 91       		.byte	0x91
 543 01eb 74       		.sleb128 -12
 544 01ec 00       		.byte	0
 545 01ed 09       		.uleb128 0x9
 546 01ee 96010000 		.4byte	.LASF34
 547 01f2 01       		.byte	0x1
 548 01f3 8A       		.byte	0x8a
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 15


 549 01f4 E1000000 		.4byte	0xe1
 550 01f8 05       		.uleb128 0x5
 551 01f9 03       		.byte	0x3
 552 01fa 00000000 		.4byte	xPort
 553 01fe 09       		.uleb128 0x9
 554 01ff A0020000 		.4byte	.LASF35
 555 0203 01       		.byte	0x1
 556 0204 95       		.byte	0x95
 557 0205 C0000000 		.4byte	0xc0
 558 0209 05       		.uleb128 0x5
 559 020a 03       		.byte	0x3
 560 020b 04000000 		.4byte	uxBaseLED
 561 020f 09       		.uleb128 0x9
 562 0210 B8000000 		.4byte	.LASF36
 563 0214 01       		.byte	0x1
 564 0215 9A       		.byte	0x9a
 565 0216 20020000 		.4byte	0x220
 566 021a 05       		.uleb128 0x5
 567 021b 03       		.byte	0x3
 568 021c 08000000 		.4byte	uxRxLoops
 569 0220 0C       		.uleb128 0xc
 570 0221 C0000000 		.4byte	0xc0
 571 0225 0D       		.uleb128 0xd
 572 0226 13010000 		.4byte	.LASF43
 573 022a 07       		.byte	0x7
 574 022b 9606     		.2byte	0x696
 575 022d 31020000 		.4byte	0x231
 576 0231 0C       		.uleb128 0xc
 577 0232 91000000 		.4byte	0x91
 578 0236 00       		.byte	0
 579              		.section	.debug_abbrev,"",%progbits
 580              	.Ldebug_abbrev0:
 581 0000 01       		.uleb128 0x1
 582 0001 11       		.uleb128 0x11
 583 0002 01       		.byte	0x1
 584 0003 25       		.uleb128 0x25
 585 0004 0E       		.uleb128 0xe
 586 0005 13       		.uleb128 0x13
 587 0006 0B       		.uleb128 0xb
 588 0007 03       		.uleb128 0x3
 589 0008 0E       		.uleb128 0xe
 590 0009 1B       		.uleb128 0x1b
 591 000a 0E       		.uleb128 0xe
 592 000b 55       		.uleb128 0x55
 593 000c 17       		.uleb128 0x17
 594 000d 11       		.uleb128 0x11
 595 000e 01       		.uleb128 0x1
 596 000f 10       		.uleb128 0x10
 597 0010 17       		.uleb128 0x17
 598 0011 00       		.byte	0
 599 0012 00       		.byte	0
 600 0013 02       		.uleb128 0x2
 601 0014 24       		.uleb128 0x24
 602 0015 00       		.byte	0
 603 0016 0B       		.uleb128 0xb
 604 0017 0B       		.uleb128 0xb
 605 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 16


 606 0019 0B       		.uleb128 0xb
 607 001a 03       		.uleb128 0x3
 608 001b 0E       		.uleb128 0xe
 609 001c 00       		.byte	0
 610 001d 00       		.byte	0
 611 001e 03       		.uleb128 0x3
 612 001f 24       		.uleb128 0x24
 613 0020 00       		.byte	0
 614 0021 0B       		.uleb128 0xb
 615 0022 0B       		.uleb128 0xb
 616 0023 3E       		.uleb128 0x3e
 617 0024 0B       		.uleb128 0xb
 618 0025 03       		.uleb128 0x3
 619 0026 08       		.uleb128 0x8
 620 0027 00       		.byte	0
 621 0028 00       		.byte	0
 622 0029 04       		.uleb128 0x4
 623 002a 16       		.uleb128 0x16
 624 002b 00       		.byte	0
 625 002c 03       		.uleb128 0x3
 626 002d 0E       		.uleb128 0xe
 627 002e 3A       		.uleb128 0x3a
 628 002f 0B       		.uleb128 0xb
 629 0030 3B       		.uleb128 0x3b
 630 0031 0B       		.uleb128 0xb
 631 0032 49       		.uleb128 0x49
 632 0033 13       		.uleb128 0x13
 633 0034 00       		.byte	0
 634 0035 00       		.byte	0
 635 0036 05       		.uleb128 0x5
 636 0037 0F       		.uleb128 0xf
 637 0038 00       		.byte	0
 638 0039 0B       		.uleb128 0xb
 639 003a 0B       		.uleb128 0xb
 640 003b 00       		.byte	0
 641 003c 00       		.byte	0
 642 003d 06       		.uleb128 0x6
 643 003e 2E       		.uleb128 0x2e
 644 003f 01       		.byte	0x1
 645 0040 3F       		.uleb128 0x3f
 646 0041 19       		.uleb128 0x19
 647 0042 03       		.uleb128 0x3
 648 0043 0E       		.uleb128 0xe
 649 0044 3A       		.uleb128 0x3a
 650 0045 0B       		.uleb128 0xb
 651 0046 3B       		.uleb128 0x3b
 652 0047 0B       		.uleb128 0xb
 653 0048 27       		.uleb128 0x27
 654 0049 19       		.uleb128 0x19
 655 004a 11       		.uleb128 0x11
 656 004b 01       		.uleb128 0x1
 657 004c 12       		.uleb128 0x12
 658 004d 06       		.uleb128 0x6
 659 004e 40       		.uleb128 0x40
 660 004f 18       		.uleb128 0x18
 661 0050 9642     		.uleb128 0x2116
 662 0052 19       		.uleb128 0x19
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 17


 663 0053 01       		.uleb128 0x1
 664 0054 13       		.uleb128 0x13
 665 0055 00       		.byte	0
 666 0056 00       		.byte	0
 667 0057 07       		.uleb128 0x7
 668 0058 05       		.uleb128 0x5
 669 0059 00       		.byte	0
 670 005a 03       		.uleb128 0x3
 671 005b 0E       		.uleb128 0xe
 672 005c 3A       		.uleb128 0x3a
 673 005d 0B       		.uleb128 0xb
 674 005e 3B       		.uleb128 0x3b
 675 005f 0B       		.uleb128 0xb
 676 0060 49       		.uleb128 0x49
 677 0061 13       		.uleb128 0x13
 678 0062 02       		.uleb128 0x2
 679 0063 18       		.uleb128 0x18
 680 0064 00       		.byte	0
 681 0065 00       		.byte	0
 682 0066 08       		.uleb128 0x8
 683 0067 2E       		.uleb128 0x2e
 684 0068 01       		.byte	0x1
 685 0069 03       		.uleb128 0x3
 686 006a 0E       		.uleb128 0xe
 687 006b 3A       		.uleb128 0x3a
 688 006c 0B       		.uleb128 0xb
 689 006d 3B       		.uleb128 0x3b
 690 006e 0B       		.uleb128 0xb
 691 006f 27       		.uleb128 0x27
 692 0070 19       		.uleb128 0x19
 693 0071 11       		.uleb128 0x11
 694 0072 01       		.uleb128 0x1
 695 0073 12       		.uleb128 0x12
 696 0074 06       		.uleb128 0x6
 697 0075 40       		.uleb128 0x40
 698 0076 18       		.uleb128 0x18
 699 0077 9642     		.uleb128 0x2116
 700 0079 19       		.uleb128 0x19
 701 007a 01       		.uleb128 0x1
 702 007b 13       		.uleb128 0x13
 703 007c 00       		.byte	0
 704 007d 00       		.byte	0
 705 007e 09       		.uleb128 0x9
 706 007f 34       		.uleb128 0x34
 707 0080 00       		.byte	0
 708 0081 03       		.uleb128 0x3
 709 0082 0E       		.uleb128 0xe
 710 0083 3A       		.uleb128 0x3a
 711 0084 0B       		.uleb128 0xb
 712 0085 3B       		.uleb128 0x3b
 713 0086 0B       		.uleb128 0xb
 714 0087 49       		.uleb128 0x49
 715 0088 13       		.uleb128 0x13
 716 0089 02       		.uleb128 0x2
 717 008a 18       		.uleb128 0x18
 718 008b 00       		.byte	0
 719 008c 00       		.byte	0
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 18


 720 008d 0A       		.uleb128 0xa
 721 008e 34       		.uleb128 0x34
 722 008f 00       		.byte	0
 723 0090 03       		.uleb128 0x3
 724 0091 0E       		.uleb128 0xe
 725 0092 3A       		.uleb128 0x3a
 726 0093 0B       		.uleb128 0xb
 727 0094 3B       		.uleb128 0x3b
 728 0095 0B       		.uleb128 0xb
 729 0096 49       		.uleb128 0x49
 730 0097 13       		.uleb128 0x13
 731 0098 00       		.byte	0
 732 0099 00       		.byte	0
 733 009a 0B       		.uleb128 0xb
 734 009b 2E       		.uleb128 0x2e
 735 009c 01       		.byte	0x1
 736 009d 3F       		.uleb128 0x3f
 737 009e 19       		.uleb128 0x19
 738 009f 03       		.uleb128 0x3
 739 00a0 0E       		.uleb128 0xe
 740 00a1 3A       		.uleb128 0x3a
 741 00a2 0B       		.uleb128 0xb
 742 00a3 3B       		.uleb128 0x3b
 743 00a4 0B       		.uleb128 0xb
 744 00a5 27       		.uleb128 0x27
 745 00a6 19       		.uleb128 0x19
 746 00a7 49       		.uleb128 0x49
 747 00a8 13       		.uleb128 0x13
 748 00a9 11       		.uleb128 0x11
 749 00aa 01       		.uleb128 0x1
 750 00ab 12       		.uleb128 0x12
 751 00ac 06       		.uleb128 0x6
 752 00ad 40       		.uleb128 0x40
 753 00ae 18       		.uleb128 0x18
 754 00af 9742     		.uleb128 0x2117
 755 00b1 19       		.uleb128 0x19
 756 00b2 01       		.uleb128 0x1
 757 00b3 13       		.uleb128 0x13
 758 00b4 00       		.byte	0
 759 00b5 00       		.byte	0
 760 00b6 0C       		.uleb128 0xc
 761 00b7 35       		.uleb128 0x35
 762 00b8 00       		.byte	0
 763 00b9 49       		.uleb128 0x49
 764 00ba 13       		.uleb128 0x13
 765 00bb 00       		.byte	0
 766 00bc 00       		.byte	0
 767 00bd 0D       		.uleb128 0xd
 768 00be 34       		.uleb128 0x34
 769 00bf 00       		.byte	0
 770 00c0 03       		.uleb128 0x3
 771 00c1 0E       		.uleb128 0xe
 772 00c2 3A       		.uleb128 0x3a
 773 00c3 0B       		.uleb128 0xb
 774 00c4 3B       		.uleb128 0x3b
 775 00c5 05       		.uleb128 0x5
 776 00c6 49       		.uleb128 0x49
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 19


 777 00c7 13       		.uleb128 0x13
 778 00c8 3F       		.uleb128 0x3f
 779 00c9 19       		.uleb128 0x19
 780 00ca 3C       		.uleb128 0x3c
 781 00cb 19       		.uleb128 0x19
 782 00cc 00       		.byte	0
 783 00cd 00       		.byte	0
 784 00ce 00       		.byte	0
 785              		.section	.debug_aranges,"",%progbits
 786 0000 34000000 		.4byte	0x34
 787 0004 0200     		.2byte	0x2
 788 0006 00000000 		.4byte	.Ldebug_info0
 789 000a 04       		.byte	0x4
 790 000b 00       		.byte	0
 791 000c 0000     		.2byte	0
 792 000e 0000     		.2byte	0
 793 0010 00000000 		.4byte	.LFB68
 794 0014 60000000 		.4byte	.LFE68-.LFB68
 795 0018 00000000 		.4byte	.LFB69
 796 001c 64000000 		.4byte	.LFE69-.LFB69
 797 0020 00000000 		.4byte	.LFB70
 798 0024 2C000000 		.4byte	.LFE70-.LFB70
 799 0028 00000000 		.4byte	.LFB71
 800 002c 30000000 		.4byte	.LFE71-.LFB71
 801 0030 00000000 		.4byte	0
 802 0034 00000000 		.4byte	0
 803              		.section	.debug_ranges,"",%progbits
 804              	.Ldebug_ranges0:
 805 0000 00000000 		.4byte	.LFB68
 806 0004 60000000 		.4byte	.LFE68
 807 0008 00000000 		.4byte	.LFB69
 808 000c 64000000 		.4byte	.LFE69
 809 0010 00000000 		.4byte	.LFB70
 810 0014 2C000000 		.4byte	.LFE70
 811 0018 00000000 		.4byte	.LFB71
 812 001c 30000000 		.4byte	.LFE71
 813 0020 00000000 		.4byte	0
 814 0024 00000000 		.4byte	0
 815              		.section	.debug_line,"",%progbits
 816              	.Ldebug_line0:
 817 0000 41020000 		.section	.debug_str,"MS",%progbits,1
 817      0200C901 
 817      00000201 
 817      FB0E0D00 
 817      01010101 
 818              	.LASF19:
 819 0000 5469636B 		.ascii	"TickType_t\000"
 819      54797065 
 819      5F7400
 820              	.LASF24:
 821 000b 75784C45 		.ascii	"uxLED\000"
 821      4400
 822              	.LASF6:
 823 0011 5F5F696E 		.ascii	"__int32_t\000"
 823      7433325F 
 823      7400
 824              	.LASF21:
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 20


 825 001b 78436F6D 		.ascii	"xComPortHandle\000"
 825      506F7274 
 825      48616E64 
 825      6C6500
 826              	.LASF37:
 827 002a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 827      4320342E 
 827      392E3320 
 827      32303135 
 827      30333033 
 828 005d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 828      20726576 
 828      6973696F 
 828      6E203232 
 828      31323230 
 829 0090 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 829      66756E63 
 829      74696F6E 
 829      2D736563 
 829      74696F6E 
 830              	.LASF36:
 831 00b8 75785278 		.ascii	"uxRxLoops\000"
 831      4C6F6F70 
 831      7300
 832              	.LASF15:
 833 00c2 666C6F61 		.ascii	"float\000"
 833      7400
 834              	.LASF41:
 835 00c8 63457870 		.ascii	"cExpectedByte\000"
 835      65637465 
 835      64427974 
 835      6500
 836              	.LASF2:
 837 00d6 756E7369 		.ascii	"unsigned char\000"
 837      676E6564 
 837      20636861 
 837      7200
 838              	.LASF30:
 839 00e4 63427974 		.ascii	"cByteRxed\000"
 839      65527865 
 839      6400
 840              	.LASF8:
 841 00ee 6C6F6E67 		.ascii	"long unsigned int\000"
 841      20756E73 
 841      69676E65 
 841      6420696E 
 841      7400
 842              	.LASF4:
 843 0100 73686F72 		.ascii	"short unsigned int\000"
 843      7420756E 
 843      7369676E 
 843      65642069 
 843      6E7400
 844              	.LASF43:
 845 0113 49544D5F 		.ascii	"ITM_RxBuffer\000"
 845      52784275 
 845      66666572 
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 21


 845      00
 846              	.LASF31:
 847 0120 78526573 		.ascii	"xResyncRequired\000"
 847      796E6352 
 847      65717569 
 847      72656400 
 848              	.LASF16:
 849 0130 646F7562 		.ascii	"double\000"
 849      6C6500
 850              	.LASF28:
 851 0137 76436F6D 		.ascii	"vComTxTask\000"
 851      54785461 
 851      736B00
 852              	.LASF27:
 853 0142 7854696D 		.ascii	"xTimeToWait\000"
 853      65546F57 
 853      61697400 
 854              	.LASF7:
 855 014e 5F5F7569 		.ascii	"__uint32_t\000"
 855      6E743332 
 855      5F7400
 856              	.LASF40:
 857 0159 76416C74 		.ascii	"vAltStartComTestTasks\000"
 857      53746172 
 857      74436F6D 
 857      54657374 
 857      5461736B 
 858              	.LASF38:
 859 016f 2E2E5C2E 		.ascii	"..\\..\\Common\\Minimal\\comtest.c\000"
 859      2E5C436F 
 859      6D6D6F6E 
 859      5C4D696E 
 859      696D616C 
 860              	.LASF33:
 861 018e 78526574 		.ascii	"xReturn\000"
 861      75726E00 
 862              	.LASF34:
 863 0196 78506F72 		.ascii	"xPort\000"
 863      7400
 864              	.LASF22:
 865 019c 75785072 		.ascii	"uxPriority\000"
 865      696F7269 
 865      747900
 866              	.LASF0:
 867 01a7 756E7369 		.ascii	"unsigned int\000"
 867      676E6564 
 867      20696E74 
 867      00
 868              	.LASF39:
 869 01b4 433A5C55 		.ascii	"C:\\Users\\NGGMLGM\\Documents\\UWE\\GDIP\\GDIP\\Fre"
 869      73657273 
 869      5C4E4747 
 869      4D4C474D 
 869      5C446F63 
 870 01e0 6552544F 		.ascii	"eRTOS\\Demo\\CORTEX_CY8C5588_PSoC_Creator_GCC\\Free"
 870      535C4465 
 870      6D6F5C43 
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 22


 870      4F525445 
 870      585F4359 
 871 0210 52544F53 		.ascii	"RTOS_Demo.cydsn\000"
 871      5F44656D 
 871      6F2E6379 
 871      64736E00 
 872              	.LASF10:
 873 0220 6C6F6E67 		.ascii	"long long unsigned int\000"
 873      206C6F6E 
 873      6720756E 
 873      7369676E 
 873      65642069 
 874              	.LASF26:
 875 0237 63427974 		.ascii	"cByteToSend\000"
 875      65546F53 
 875      656E6400 
 876              	.LASF32:
 877 0243 78457272 		.ascii	"xErrorOccurred\000"
 877      6F724F63 
 877      63757272 
 877      656400
 878              	.LASF42:
 879 0252 78417265 		.ascii	"xAreComTestTasksStillRunning\000"
 879      436F6D54 
 879      65737454 
 879      61736B73 
 879      5374696C 
 880              	.LASF13:
 881 026f 696E7433 		.ascii	"int32_t\000"
 881      325F7400 
 882              	.LASF11:
 883 0277 73697A65 		.ascii	"sizetype\000"
 883      74797065 
 883      00
 884              	.LASF9:
 885 0280 6C6F6E67 		.ascii	"long long int\000"
 885      206C6F6E 
 885      6720696E 
 885      7400
 886              	.LASF12:
 887 028e 63686172 		.ascii	"char\000"
 887      00
 888              	.LASF25:
 889 0293 70765061 		.ascii	"pvParameters\000"
 889      72616D65 
 889      74657273 
 889      00
 890              	.LASF35:
 891 02a0 75784261 		.ascii	"uxBaseLED\000"
 891      73654C45 
 891      4400
 892              	.LASF3:
 893 02aa 73686F72 		.ascii	"short int\000"
 893      7420696E 
 893      7400
 894              	.LASF23:
 895 02b4 756C4261 		.ascii	"ulBaudRate\000"
ARM GAS  C:\Users\NGGMLGM\AppData\Local\Temp\ccHulEIb.s 			page 23


 895      75645261 
 895      746500
 896              	.LASF20:
 897 02bf 5461736B 		.ascii	"TaskHandle_t\000"
 897      48616E64 
 897      6C655F74 
 897      00
 898              	.LASF14:
 899 02cc 75696E74 		.ascii	"uint32_t\000"
 899      33325F74 
 899      00
 900              	.LASF5:
 901 02d5 6C6F6E67 		.ascii	"long int\000"
 901      20696E74 
 901      00
 902              	.LASF29:
 903 02de 76436F6D 		.ascii	"vComRxTask\000"
 903      52785461 
 903      736B00
 904              	.LASF1:
 905 02e9 7369676E 		.ascii	"signed char\000"
 905      65642063 
 905      68617200 
 906              	.LASF18:
 907 02f5 55426173 		.ascii	"UBaseType_t\000"
 907      65547970 
 907      655F7400 
 908              	.LASF17:
 909 0301 42617365 		.ascii	"BaseType_t\000"
 909      54797065 
 909      5F7400
 910              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
